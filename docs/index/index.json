{"includedArchiveIdentifiers":["com.auth0.Auth0"],"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/auth0\/refreshtokens","title":"Refresh Tokens: Common Errors","type":"article"},{"path":"\/documentation\/auth0\/useragents","title":"ASWebAuthenticationSession vs SFSafariViewController (iOS)","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentials\/init(accesstoken:tokentype:idtoken:refreshtoken:expiresin:scope:recoverycode:)","title":"init(accessToken: String, tokenType: String, idToken: String, refreshToken: String?, expiresIn: Date, scope: String?, recoveryCode: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentials\/accesstoken","title":"let accessToken: String","type":"property"},{"path":"\/documentation\/auth0\/credentials\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/auth0\/credentials\/expiresin","title":"let expiresIn: Date","type":"property"},{"path":"\/documentation\/auth0\/credentials\/idtoken","title":"let idToken: String","type":"property"},{"path":"\/documentation\/auth0\/credentials\/recoverycode","title":"let recoveryCode: String?","type":"property"},{"path":"\/documentation\/auth0\/credentials\/refreshtoken","title":"let refreshToken: String?","type":"property"},{"path":"\/documentation\/auth0\/credentials\/scope","title":"let scope: String?","type":"property"},{"path":"\/documentation\/auth0\/credentials\/tokentype","title":"let tokenType: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentials\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/auth0\/credentials\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentials\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentials\/encode(with:)","title":"func encode(with: NSCoder)","type":"method"}],"path":"\/documentation\/auth0\/credentials\/nscoding-implementations","title":"NSCoding Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentials\/supportssecurecoding","title":"static var supportsSecureCoding: Bool","type":"property"}],"path":"\/documentation\/auth0\/credentials\/nssecurecoding-implementations","title":"NSSecureCoding Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/credentials","title":"Credentials","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/userpatchattributes\/init(dictionary:)","title":"init(dictionary: [String : Any])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/userpatchattributes\/appmetadata(_:)","title":"func appMetadata([String : Any]) -> UserPatchAttributes","type":"method"},{"path":"\/documentation\/auth0\/userpatchattributes\/blocked(_:)","title":"func blocked(Bool) -> UserPatchAttributes","type":"method"},{"path":"\/documentation\/auth0\/userpatchattributes\/email(_:verified:verify:connection:clientid:)","title":"func email(String, verified: Bool?, verify: Bool?, connection: String, clientId: String) -> UserPatchAttributes","type":"method"},{"path":"\/documentation\/auth0\/userpatchattributes\/emailverified(_:connection:)","title":"func emailVerified(Bool, connection: String) -> UserPatchAttributes","type":"method"},{"path":"\/documentation\/auth0\/userpatchattributes\/password(_:verify:connection:)","title":"func password(String, verify: Bool?, connection: String) -> UserPatchAttributes","type":"method"},{"path":"\/documentation\/auth0\/userpatchattributes\/phonenumber(_:verified:verify:connection:clientid:)","title":"func phoneNumber(String, verified: Bool?, verify: Bool?, connection: String, clientId: String) -> UserPatchAttributes","type":"method"},{"path":"\/documentation\/auth0\/userpatchattributes\/phoneverified(_:connection:)","title":"func phoneVerified(Bool, connection: String) -> UserPatchAttributes","type":"method"},{"path":"\/documentation\/auth0\/userpatchattributes\/usermetadata(_:)","title":"func userMetadata([String : Any]) -> UserPatchAttributes","type":"method"},{"path":"\/documentation\/auth0\/userpatchattributes\/username(_:connection:)","title":"func username(String, connection: String) -> UserPatchAttributes","type":"method"}],"path":"\/documentation\/auth0\/userpatchattributes","title":"UserPatchAttributes","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/auth0apierror\/init(info:statuscode:)","title":"init(info: [String : Any], statusCode: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/auth0apierror\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/auth0\/auth0apierror\/info","title":"var info: [String : Any]","type":"property"},{"path":"\/documentation\/auth0\/auth0apierror\/isnetworkerror","title":"var isNetworkError: Bool","type":"property"},{"path":"\/documentation\/auth0\/auth0apierror\/statuscode","title":"var statusCode: Int","type":"property"}],"path":"\/documentation\/auth0\/auth0apierror","title":"Auth0APIError","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/auth0\/auth0error\/cause-9wuyi","title":"var cause: Error?","type":"property"},{"path":"\/documentation\/auth0\/auth0error\/cause-97kwn","title":"var cause: Error?","type":"property"}],"title":"Auth0Error Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/auth0error\/cause","title":"var cause: Error?","type":"property"},{"path":"\/documentation\/auth0\/auth0error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/auth0\/auth0error","title":"Auth0Error","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/authentication\/clientid","title":"var clientId: String","type":"property"},{"path":"\/documentation\/auth0\/authentication\/url","title":"var url: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/authentication\/codeexchange(withcode:codeverifier:redirecturi:)","title":"func codeExchange(withCode: String, codeVerifier: String, redirectURI: String) -> Request<Credentials, AuthenticationError>","type":"method"},{"path":"\/documentation\/auth0\/authentication\/jwks()","title":"func jwks() -> Request<JWKS, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/login(appleauthorizationcode:fullname:profile:audience:scope:)-6sf9m","title":"func login(appleAuthorizationCode: String, fullName: PersonNameComponents?, profile: [String : Any]?, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/login(appleauthorizationcode:fullname:profile:audience:scope:)","title":"func login(appleAuthorizationCode: String, fullName: PersonNameComponents?, profile: [String : Any]?, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/login(email:code:audience:scope:)-39g8b","title":"func login(email: String, code: String, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/login(email:code:audience:scope:)","title":"func login(email: String, code: String, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/login(facebooksessionaccesstoken:profile:audience:scope:)-28ncj","title":"func login(facebookSessionAccessToken: String, profile: [String : Any], audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/login(facebooksessionaccesstoken:profile:audience:scope:)","title":"func login(facebookSessionAccessToken: String, profile: [String : Any], audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/login(passkey:challenge:connection:audience:scope:)-7s3cz","title":"func login(passkey: LoginPasskey, challenge: PasskeyLoginChallenge, connection: String?, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"},{"path":"\/documentation\/auth0\/authentication\/login(passkey:challenge:connection:audience:scope:)-4q8i0","title":"func login(passkey: SignupPasskey, challenge: PasskeySignupChallenge, connection: String?, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/login(passkey:challenge:connection:audience:scope:)-38ask","title":"func login(passkey: SignupPasskey, challenge: PasskeySignupChallenge, connection: String?, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/login(passkey:challenge:connection:audience:scope:)-7s3cz","title":"func login(passkey: LoginPasskey, challenge: PasskeyLoginChallenge, connection: String?, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"},{"path":"\/documentation\/auth0\/authentication\/login(passkey:challenge:connection:audience:scope:)-4q8i0","title":"func login(passkey: SignupPasskey, challenge: PasskeySignupChallenge, connection: String?, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/login(passkey:challenge:connection:audience:scope:)-41u2v","title":"func login(passkey: LoginPasskey, challenge: PasskeyLoginChallenge, connection: String?, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/login(phonenumber:code:audience:scope:)-8kbii","title":"func login(phoneNumber: String, code: String, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/login(phonenumber:code:audience:scope:)","title":"func login(phoneNumber: String, code: String, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/login(usernameoremail:password:realmorconnection:audience:scope:)-8kdlq","title":"func login(usernameOrEmail: String, password: String, realmOrConnection: String, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/login(usernameoremail:password:realmorconnection:audience:scope:)","title":"func login(usernameOrEmail: String, password: String, realmOrConnection: String, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/login(withoobcode:mfatoken:bindingcode:)-3ykhg","title":"func login(withOOBCode: String, mfaToken: String, bindingCode: String?) -> Request<Credentials, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/login(withoobcode:mfatoken:bindingcode:)","title":"func login(withOOBCode: String, mfaToken: String, bindingCode: String?) -> Request<Credentials, AuthenticationError>","type":"method"},{"path":"\/documentation\/auth0\/authentication\/login(withotp:mfatoken:)","title":"func login(withOTP: String, mfaToken: String) -> Request<Credentials, AuthenticationError>","type":"method"},{"path":"\/documentation\/auth0\/authentication\/login(withrecoverycode:mfatoken:)","title":"func login(withRecoveryCode: String, mfaToken: String) -> Request<Credentials, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/logindefaultdirectory(withusername:password:audience:scope:)-4gru8","title":"func loginDefaultDirectory(withUsername: String, password: String, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/logindefaultdirectory(withusername:password:audience:scope:)","title":"func loginDefaultDirectory(withUsername: String, password: String, audience: String?, scope: String) -> Request<Credentials, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/multifactorchallenge(mfatoken:types:authenticatorid:)-7xrct","title":"func multifactorChallenge(mfaToken: String, types: [String]?, authenticatorId: String?) -> Request<Challenge, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/multifactorchallenge(mfatoken:types:authenticatorid:)","title":"func multifactorChallenge(mfaToken: String, types: [String]?, authenticatorId: String?) -> Request<Challenge, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/passkeyloginchallenge(connection:)-33t3h","title":"func passkeyLoginChallenge(connection: String?) -> Request<PasskeyLoginChallenge, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/passkeyloginchallenge(connection:)","title":"func passkeyLoginChallenge(connection: String?) -> Request<PasskeyLoginChallenge, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/passkeysignupchallenge(email:phonenumber:username:name:connection:)-880kr","title":"func passkeySignupChallenge(email: String?, phoneNumber: String?, username: String?, name: String?, connection: String?) -> Request<PasskeySignupChallenge, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/passkeysignupchallenge(email:phonenumber:username:name:connection:)","title":"func passkeySignupChallenge(email: String?, phoneNumber: String?, username: String?, name: String?, connection: String?) -> Request<PasskeySignupChallenge, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/renew(withrefreshtoken:audience:scope:)-1orlu","title":"func renew(withRefreshToken: String, audience: String?, scope: String?) -> Request<Credentials, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/renew(withrefreshtoken:audience:scope:)","title":"func renew(withRefreshToken: String, audience: String?, scope: String?) -> Request<Credentials, AuthenticationError>","type":"method"},{"path":"\/documentation\/auth0\/authentication\/resetpassword(email:connection:)","title":"func resetPassword(email: String, connection: String) -> Request<Void, AuthenticationError>","type":"method"},{"path":"\/documentation\/auth0\/authentication\/revoke(refreshtoken:)","title":"func revoke(refreshToken: String) -> Request<Void, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/signup(email:username:password:connection:usermetadata:rootattributes:)-92l3l","title":"func signup(email: String, username: String?, password: String, connection: String, userMetadata: [String : Any]?, rootAttributes: [String : Any]?) -> Request<DatabaseUser, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/signup(email:username:password:connection:usermetadata:rootattributes:)","title":"func signup(email: String, username: String?, password: String, connection: String, userMetadata: [String : Any]?, rootAttributes: [String : Any]?) -> Request<DatabaseUser, AuthenticationError>","type":"method"},{"path":"\/documentation\/auth0\/authentication\/ssoexchange(withrefreshtoken:)","title":"func ssoExchange(withRefreshToken: String) -> Request<SSOCredentials, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/startpasswordless(email:type:connection:)-6xl8p","title":"func startPasswordless(email: String, type: PasswordlessType, connection: String) -> Request<Void, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/startpasswordless(email:type:connection:)","title":"func startPasswordless(email: String, type: PasswordlessType, connection: String) -> Request<Void, AuthenticationError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/authentication\/startpasswordless(phonenumber:type:connection:)-5azmm","title":"func startPasswordless(phoneNumber: String, type: PasswordlessType, connection: String) -> Request<Void, AuthenticationError>","type":"method"}],"title":"Authentication Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/authentication\/startpasswordless(phonenumber:type:connection:)","title":"func startPasswordless(phoneNumber: String, type: PasswordlessType, connection: String) -> Request<Void, AuthenticationError>","type":"method"},{"path":"\/documentation\/auth0\/authentication\/userinfo(withaccesstoken:)","title":"func userInfo(withAccessToken: String) -> Request<UserInfo, AuthenticationError>","type":"method"}],"path":"\/documentation\/auth0\/authentication","title":"Authentication","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentialsstorage\/deleteentry(forkey:)","title":"func deleteEntry(forKey: String) -> Bool","type":"method"},{"path":"\/documentation\/auth0\/credentialsstorage\/getentry(forkey:)","title":"func getEntry(forKey: String) -> Data?","type":"method"},{"path":"\/documentation\/auth0\/credentialsstorage\/setentry(_:forkey:)","title":"func setEntry(Data, forKey: String) -> Bool","type":"method"}],"path":"\/documentation\/auth0\/credentialsstorage","title":"CredentialsStorage","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/loggable\/logger","title":"var logger: Logger?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/loggable\/logging(enabled:)","title":"func logging(enabled: Bool) -> Self","type":"method"},{"path":"\/documentation\/auth0\/loggable\/using(logger:)","title":"func using(logger: Logger) -> Self","type":"method"}],"path":"\/documentation\/auth0\/loggable","title":"Loggable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/logger\/trace(request:session:)","title":"func trace(request: URLRequest, session: URLSession)","type":"method"},{"path":"\/documentation\/auth0\/logger\/trace(response:data:)","title":"func trace(response: URLResponse, data: Data?)","type":"method"},{"path":"\/documentation\/auth0\/logger\/trace(url:source:)","title":"func trace(url: URL, source: String?)","type":"method"}],"path":"\/documentation\/auth0\/logger","title":"Logger","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/loginpasskey\/attachment","title":"var attachment: ASAuthorizationPublicKeyCredentialAttachment","type":"property"},{"path":"\/documentation\/auth0\/loginpasskey\/credentialid","title":"var credentialID: Data","type":"property"},{"path":"\/documentation\/auth0\/loginpasskey\/rawauthenticatordata","title":"var rawAuthenticatorData: Data!","type":"property"},{"path":"\/documentation\/auth0\/loginpasskey\/rawclientdatajson","title":"var rawClientDataJSON: Data","type":"property"},{"path":"\/documentation\/auth0\/loginpasskey\/signature","title":"var signature: Data!","type":"property"},{"path":"\/documentation\/auth0\/loginpasskey\/userid","title":"var userID: Data!","type":"property"}],"path":"\/documentation\/auth0\/loginpasskey","title":"LoginPasskey","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/myaccount\/authenticationmethods","title":"var authenticationMethods: MyAccountAuthenticationMethods","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/myaccount\/apiversion","title":"static var apiVersion: String","type":"property"}],"path":"\/documentation\/auth0\/myaccount","title":"MyAccount","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/myaccountauthenticationmethods\/enroll(passkey:challenge:)","title":"func enroll(passkey: NewPasskey, challenge: PasskeyEnrollmentChallenge) -> Request<PasskeyAuthenticationMethod, MyAccountError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/myaccountauthenticationmethods\/passkeyenrollmentchallenge(useridentityid:connection:)-71dk8","title":"func passkeyEnrollmentChallenge(userIdentityId: String?, connection: String?) -> Request<PasskeyEnrollmentChallenge, MyAccountError>","type":"method"}],"title":"MyAccountAuthenticationMethods Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/myaccountauthenticationmethods\/passkeyenrollmentchallenge(useridentityid:connection:)","title":"func passkeyEnrollmentChallenge(userIdentityId: String?, connection: String?) -> Request<PasskeyEnrollmentChallenge, MyAccountError>","type":"method"}],"path":"\/documentation\/auth0\/myaccountauthenticationmethods","title":"MyAccountAuthenticationMethods","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/myaccountclient\/token","title":"var token: String","type":"property"},{"path":"\/documentation\/auth0\/myaccountclient\/url","title":"var url: URL","type":"property"}],"path":"\/documentation\/auth0\/myaccountclient","title":"MyAccountClient","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/newpasskey\/attachment","title":"var attachment: ASAuthorizationPublicKeyCredentialAttachment","type":"property"},{"path":"\/documentation\/auth0\/newpasskey\/credentialid","title":"var credentialID: Data","type":"property"},{"path":"\/documentation\/auth0\/newpasskey\/rawattestationobject","title":"var rawAttestationObject: Data?","type":"property"},{"path":"\/documentation\/auth0\/newpasskey\/rawclientdatajson","title":"var rawClientDataJSON: Data","type":"property"}],"path":"\/documentation\/auth0\/newpasskey","title":"NewPasskey","type":"protocol"},{"path":"\/documentation\/auth0\/signuppasskey","title":"SignupPasskey","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/trackable\/telemetry","title":"var telemetry: Telemetry","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/trackable\/tracking(enabled:)","title":"func tracking(enabled: Bool)","type":"method"},{"path":"\/documentation\/auth0\/trackable\/using(inlibrary:version:)","title":"func using(inLibrary: String, version: String)","type":"method"}],"path":"\/documentation\/auth0\/trackable","title":"Trackable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/users\/token","title":"var token: String","type":"property"},{"path":"\/documentation\/auth0\/users\/url","title":"var url: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/auth0\/users\/get(_:fields:include:)-7aaln","title":"func get(String, fields: [String], include: Bool) -> Request<ManagementObject, ManagementError>","type":"method"}],"title":"Users Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/users\/get(_:fields:include:)","title":"func get(String, fields: [String], include: Bool) -> Request<ManagementObject, ManagementError>","type":"method"},{"path":"\/documentation\/auth0\/users\/link(_:withotherusertoken:)","title":"func link(String, withOtherUserToken: String) -> Request<[ManagementObject], ManagementError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/users\/link(_:withuser:provider:connectionid:)-6nwr7","title":"func link(String, withUser: String, provider: String, connectionId: String?) -> Request<[ManagementObject], ManagementError>","type":"method"}],"title":"Users Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/users\/link(_:withuser:provider:connectionid:)","title":"func link(String, withUser: String, provider: String, connectionId: String?) -> Request<[ManagementObject], ManagementError>","type":"method"},{"path":"\/documentation\/auth0\/users\/patch(_:attributes:)","title":"func patch(String, attributes: UserPatchAttributes) -> Request<ManagementObject, ManagementError>","type":"method"},{"path":"\/documentation\/auth0\/users\/patch(_:usermetadata:)","title":"func patch(String, userMetadata: [String : Any]) -> Request<ManagementObject, ManagementError>","type":"method"},{"path":"\/documentation\/auth0\/users\/unlink(identityid:provider:fromuserid:)","title":"func unlink(identityId: String, provider: String, fromUserId: String) -> Request<[ManagementObject], ManagementError>","type":"method"}],"path":"\/documentation\/auth0\/users","title":"Users","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/webauth\/clientid","title":"var clientId: String","type":"property"},{"path":"\/documentation\/auth0\/webauth\/telemetry","title":"var telemetry: Telemetry","type":"property"},{"path":"\/documentation\/auth0\/webauth\/url","title":"var url: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/webauth\/audience(_:)","title":"func audience(String) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/authorizeurl(_:)","title":"func authorizeURL(URL) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/webauth\/clearsession(federated:)-6n4z6","title":"func clearSession(federated: Bool) -> AnyPublisher<Void, WebAuthError>","type":"method"},{"path":"\/documentation\/auth0\/webauth\/clearsession(federated:)-3k5r3","title":"func clearSession(federated: Bool) async throws","type":"method"}],"title":"WebAuth Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/webauth\/clearsession(federated:)-4zqyr","title":"func clearSession(federated: Bool) -> AnyPublisher<Void, WebAuthError>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/webauth\/clearsession(federated:)-3k5r3","title":"func clearSession(federated: Bool) async throws","type":"method"},{"path":"\/documentation\/auth0\/webauth\/clearsession(federated:)-6n4z6","title":"func clearSession(federated: Bool) -> AnyPublisher<Void, WebAuthError>","type":"method"}],"title":"WebAuth Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/webauth\/clearsession(federated:)-8sl1o","title":"func clearSession(federated: Bool) async throws","type":"method"},{"children":[{"children":[{"path":"\/documentation\/auth0\/webauth\/clearsession(federated:callback:)-9yv61","title":"func clearSession(federated: Bool, callback: (WebAuthResult<Void>) -> Void)","type":"method"}],"title":"WebAuth Implementations","type":"groupMarker"}],"path":"\/documentation\/auth0\/webauth\/clearsession(federated:callback:)","title":"func clearSession(federated: Bool, callback: (WebAuthResult<Void>) -> Void)","type":"method"},{"path":"\/documentation\/auth0\/webauth\/connection(_:)","title":"func connection(String) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/connectionscope(_:)","title":"func connectionScope(String) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/headers(_:)","title":"func headers([String : String]) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/invitationurl(_:)","title":"func invitationURL(URL) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/issuer(_:)","title":"func issuer(String) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/leeway(_:)","title":"func leeway(Int) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/maxage(_:)","title":"func maxAge(Int) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/nonce(_:)","title":"func nonce(String) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/onclose(_:)","title":"func onClose((() -> Void)?) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/organization(_:)","title":"func organization(String) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/parameters(_:)","title":"func parameters([String : String]) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/provider(_:)","title":"func provider(WebAuthProvider) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/redirecturl(_:)","title":"func redirectURL(URL) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/scope(_:)","title":"func scope(String) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/start()-98znq","title":"func start() async throws -> Credentials","type":"method"},{"path":"\/documentation\/auth0\/webauth\/start()-qpqo","title":"func start() -> AnyPublisher<Credentials, WebAuthError>","type":"method"},{"path":"\/documentation\/auth0\/webauth\/start(_:)","title":"func start((WebAuthResult<Credentials>) -> Void)","type":"method"},{"path":"\/documentation\/auth0\/webauth\/state(_:)","title":"func state(String) -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/useephemeralsession()","title":"func useEphemeralSession() -> Self","type":"method"},{"path":"\/documentation\/auth0\/webauth\/usehttps()","title":"func useHTTPS() -> Self","type":"method"}],"path":"\/documentation\/auth0\/webauth","title":"WebAuth","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/webauthuseragent\/finish(with:)","title":"func finish(with: WebAuthResult<Void>)","type":"method"},{"path":"\/documentation\/auth0\/webauthuseragent\/start()","title":"func start()","type":"method"}],"path":"\/documentation\/auth0\/webauthuseragent","title":"WebAuthUserAgent","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/apicredentials\/init(accesstoken:tokentype:expiresin:scope:)","title":"init(accessToken: String, tokenType: String, expiresIn: Date, scope: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/apicredentials\/accesstoken","title":"let accessToken: String","type":"property"},{"path":"\/documentation\/auth0\/apicredentials\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/auth0\/apicredentials\/expiresin","title":"let expiresIn: Date","type":"property"},{"path":"\/documentation\/auth0\/apicredentials\/scope","title":"let scope: String","type":"property"},{"path":"\/documentation\/auth0\/apicredentials\/tokentype","title":"let tokenType: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/apicredentials\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/auth0\/apicredentials\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/apicredentials","title":"APICredentials","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/authenticationerror\/init(info:statuscode:)","title":"init(info: [String : Any], statusCode: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/authenticationerror\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/info","title":"let info: [String : Any]","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/isaccessdenied","title":"var isAccessDenied: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/isinvalidcredentials","title":"var isInvalidCredentials: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/isinvalidrefreshtoken","title":"var isInvalidRefreshToken: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/isloginrequired","title":"var isLoginRequired: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/ismultifactorcodeinvalid","title":"var isMultifactorCodeInvalid: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/ismultifactorenrollrequired","title":"var isMultifactorEnrollRequired: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/ismultifactorrequired","title":"var isMultifactorRequired: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/ismultifactortokeninvalid","title":"var isMultifactorTokenInvalid: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/ispasswordalreadyused","title":"var isPasswordAlreadyUsed: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/ispasswordleaked","title":"var isPasswordLeaked: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/ispasswordnotstrongenough","title":"var isPasswordNotStrongEnough: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/isrefreshtokendeleted","title":"var isRefreshTokenDeleted: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/isruleerror","title":"var isRuleError: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/istoomanyattempts","title":"var isTooManyAttempts: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/isverificationrequired","title":"var isVerificationRequired: Bool","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/statuscode","title":"let statusCode: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/authenticationerror\/cause","title":"var cause: Error?","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/isnetworkerror","title":"var isNetworkError: Bool","type":"property"}],"path":"\/documentation\/auth0\/authenticationerror\/auth0apierror-implementations","title":"Auth0APIError Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/authenticationerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/auth0\/authenticationerror\/auth0error-implementations","title":"Auth0Error Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/auth0\/authenticationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/auth0\/authenticationerror\/==(_:_:)","title":"static func == (AuthenticationError, AuthenticationError) -> Bool","type":"op"}],"path":"\/documentation\/auth0\/authenticationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/authenticationerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/auth0\/authenticationerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/auth0\/authenticationerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/authenticationerror","title":"AuthenticationError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/challenge\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/challenge\/bindingmethod","title":"let bindingMethod: String?","type":"property"},{"path":"\/documentation\/auth0\/challenge\/challengetype","title":"let challengeType: String","type":"property"},{"path":"\/documentation\/auth0\/challenge\/oobcode","title":"let oobCode: String?","type":"property"}],"path":"\/documentation\/auth0\/challenge","title":"Challenge","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentialsmanager\/init(authentication:storekey:storage:)","title":"init(authentication: Authentication, storeKey: String, storage: CredentialsStorage)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentialsmanager\/user","title":"var user: UserInfo?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentialsmanager\/apicredentials(foraudience:scope:minttl:parameters:headers:)-18htb","title":"func apiCredentials(forAudience: String, scope: String?, minTTL: Int, parameters: [String : Any], headers: [String : String]) -> AnyPublisher<APICredentials, CredentialsManagerError>","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/apicredentials(foraudience:scope:minttl:parameters:headers:)-8lezm","title":"func apiCredentials(forAudience: String, scope: String?, minTTL: Int, parameters: [String : Any], headers: [String : String]) async throws -> APICredentials","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/apicredentials(foraudience:scope:minttl:parameters:headers:callback:)","title":"func apiCredentials(forAudience: String, scope: String?, minTTL: Int, parameters: [String : Any], headers: [String : String], callback: (CredentialsManagerResult<APICredentials>) -> Void)","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/canrenew()","title":"func canRenew() -> Bool","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/clear()","title":"func clear() -> Bool","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/clear(foraudience:)","title":"func clear(forAudience: String) -> Bool","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/credentials(withscope:minttl:parameters:headers:)-11d2f","title":"func credentials(withScope: String?, minTTL: Int, parameters: [String : Any], headers: [String : String]) async throws -> Credentials","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/credentials(withscope:minttl:parameters:headers:)-7xldm","title":"func credentials(withScope: String?, minTTL: Int, parameters: [String : Any], headers: [String : String]) -> AnyPublisher<Credentials, CredentialsManagerError>","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/credentials(withscope:minttl:parameters:headers:callback:)","title":"func credentials(withScope: String?, minTTL: Int, parameters: [String : Any], headers: [String : String], callback: (CredentialsManagerResult<Credentials>) -> Void)","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/enablebiometrics(withtitle:canceltitle:fallbacktitle:evaluationpolicy:)","title":"func enableBiometrics(withTitle: String, cancelTitle: String?, fallbackTitle: String?, evaluationPolicy: LAPolicy)","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/hasvalid(minttl:)","title":"func hasValid(minTTL: Int) -> Bool","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/renew(parameters:headers:)-3jl3m","title":"func renew(parameters: [String : Any], headers: [String : String]) async throws -> Credentials","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/renew(parameters:headers:)-7yn20","title":"func renew(parameters: [String : Any], headers: [String : String]) -> AnyPublisher<Credentials, CredentialsManagerError>","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/renew(parameters:headers:callback:)","title":"func renew(parameters: [String : Any], headers: [String : String], callback: (CredentialsManagerResult<Credentials>) -> Void)","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/revoke(headers:)-6wgai","title":"func revoke(headers: [String : String]) async throws","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/revoke(headers:)-9mzo6","title":"func revoke(headers: [String : String]) -> AnyPublisher<Void, CredentialsManagerError>","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/revoke(headers:_:)","title":"func revoke(headers: [String : String], (CredentialsManagerResult<Void>) -> Void)","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/ssocredentials(parameters:headers:)-151ni","title":"func ssoCredentials(parameters: [String : Any], headers: [String : String]) -> AnyPublisher<SSOCredentials, CredentialsManagerError>","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/ssocredentials(parameters:headers:)-8vdt4","title":"func ssoCredentials(parameters: [String : Any], headers: [String : String]) async throws -> SSOCredentials","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/ssocredentials(parameters:headers:callback:)","title":"func ssoCredentials(parameters: [String : Any], headers: [String : String], callback: (CredentialsManagerResult<SSOCredentials>) -> Void)","type":"method"},{"path":"\/documentation\/auth0\/credentialsmanager\/store(credentials:)","title":"func store(credentials: Credentials) -> Bool","type":"method"}],"path":"\/documentation\/auth0\/credentialsmanager","title":"CredentialsManager","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/~=(_:_:)-7k0od","title":"static func ~= (CredentialsManagerError, CredentialsManagerError) -> Bool","type":"op"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/~=(_:_:)-93ixe","title":"static func ~= (CredentialsManagerError, Error) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/cause","title":"let cause: Error?","type":"property"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/debugdescription","title":"var debugDescription: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/apiexchangefailed","title":"static let apiExchangeFailed: CredentialsManagerError","type":"property"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/biometricsfailed","title":"static let biometricsFailed: CredentialsManagerError","type":"property"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/largeminttl","title":"static let largeMinTTL: CredentialsManagerError","type":"property"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/nocredentials","title":"static let noCredentials: CredentialsManagerError","type":"property"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/norefreshtoken","title":"static let noRefreshToken: CredentialsManagerError","type":"property"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/renewfailed","title":"static let renewFailed: CredentialsManagerError","type":"property"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/revokefailed","title":"static let revokeFailed: CredentialsManagerError","type":"property"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/ssoexchangefailed","title":"static let ssoExchangeFailed: CredentialsManagerError","type":"property"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/storefailed","title":"static let storeFailed: CredentialsManagerError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/auth0\/credentialsmanagererror\/auth0error-implementations","title":"Auth0Error Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/==(_:_:)","title":"static func == (CredentialsManagerError, CredentialsManagerError) -> Bool","type":"op"}],"path":"\/documentation\/auth0\/credentialsmanagererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/auth0\/credentialsmanagererror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/auth0\/credentialsmanagererror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/credentialsmanagererror","title":"CredentialsManagerError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/jwk\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/jwk\/algorithm","title":"let algorithm: String?","type":"property"},{"path":"\/documentation\/auth0\/jwk\/certchain","title":"let certChain: [String]?","type":"property"},{"path":"\/documentation\/auth0\/jwk\/certthumbprint","title":"let certThumbprint: String?","type":"property"},{"path":"\/documentation\/auth0\/jwk\/certurl","title":"let certUrl: String?","type":"property"},{"path":"\/documentation\/auth0\/jwk\/exponent","title":"let exponent: String?","type":"property"},{"path":"\/documentation\/auth0\/jwk\/keyid","title":"let keyId: String?","type":"property"},{"path":"\/documentation\/auth0\/jwk\/keytype","title":"let keyType: String","type":"property"},{"path":"\/documentation\/auth0\/jwk\/modulus","title":"let modulus: String?","type":"property"},{"path":"\/documentation\/auth0\/jwk\/usage","title":"let usage: String?","type":"property"}],"path":"\/documentation\/auth0\/jwk","title":"JWK","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/jwks\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/jwks\/keys","title":"let keys: [JWK]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/jwks\/key(id:)","title":"func key(id: String) -> JWK?","type":"method"}],"path":"\/documentation\/auth0\/jwks","title":"JWKS","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/managementerror\/init(info:statuscode:)","title":"init(info: [String : Any], statusCode: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/managementerror\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/auth0\/managementerror\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/auth0\/managementerror\/info","title":"let info: [String : Any]","type":"property"},{"path":"\/documentation\/auth0\/managementerror\/statuscode","title":"let statusCode: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/managementerror\/cause","title":"var cause: Error?","type":"property"},{"path":"\/documentation\/auth0\/managementerror\/isnetworkerror","title":"var isNetworkError: Bool","type":"property"}],"path":"\/documentation\/auth0\/managementerror\/auth0apierror-implementations","title":"Auth0APIError Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/managementerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/auth0\/managementerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/auth0\/managementerror\/auth0error-implementations","title":"Auth0Error Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/auth0\/managementerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/auth0\/managementerror\/==(_:_:)","title":"static func == (ManagementError, ManagementError) -> Bool","type":"op"}],"path":"\/documentation\/auth0\/managementerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/managementerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/auth0\/managementerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/auth0\/managementerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/auth0\/managementerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/managementerror","title":"ManagementError","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/auth0\/myaccounterror\/validationerror","title":"MyAccountError.ValidationError","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/myaccounterror\/init(info:statuscode:)","title":"init(info: [String : Any], statusCode: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/myaccounterror\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/auth0\/myaccounterror\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/auth0\/myaccounterror\/detail","title":"let detail: String","type":"property"},{"path":"\/documentation\/auth0\/myaccounterror\/info","title":"let info: [String : Any]","type":"property"},{"path":"\/documentation\/auth0\/myaccounterror\/statuscode","title":"let statusCode: Int","type":"property"},{"path":"\/documentation\/auth0\/myaccounterror\/title","title":"let title: String","type":"property"},{"path":"\/documentation\/auth0\/myaccounterror\/validationerrors","title":"let validationErrors: [ValidationError]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/myaccounterror\/cause","title":"var cause: Error?","type":"property"},{"path":"\/documentation\/auth0\/myaccounterror\/isnetworkerror","title":"var isNetworkError: Bool","type":"property"}],"path":"\/documentation\/auth0\/myaccounterror\/auth0apierror-implementations","title":"Auth0APIError Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/myaccounterror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/auth0\/myaccounterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/auth0\/myaccounterror\/auth0error-implementations","title":"Auth0Error Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/auth0\/myaccounterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/auth0\/myaccounterror\/==(_:_:)","title":"static func == (MyAccountError, MyAccountError) -> Bool","type":"op"}],"path":"\/documentation\/auth0\/myaccounterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/myaccounterror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/auth0\/myaccounterror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/auth0\/myaccounterror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/auth0\/myaccounterror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/myaccounterror","title":"MyAccountError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeyauthenticationmethod\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/auth0\/passkeyauthenticationmethod\/credential","title":"let credential: PasskeyCredential","type":"property"},{"path":"\/documentation\/auth0\/passkeyauthenticationmethod\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/auth0\/passkeyauthenticationmethod\/type","title":"let type: String","type":"property"},{"path":"\/documentation\/auth0\/passkeyauthenticationmethod\/useragent","title":"let userAgent: String?","type":"property"},{"path":"\/documentation\/auth0\/passkeyauthenticationmethod\/useridentityid","title":"let userIdentityId: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeyauthenticationmethod\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/auth0\/passkeyauthenticationmethod\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeyauthenticationmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/auth0\/passkeyauthenticationmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/passkeyauthenticationmethod","title":"PasskeyAuthenticationMethod","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeycredential\/devicetype","title":"let deviceType: PasskeyDeviceType","type":"property"},{"path":"\/documentation\/auth0\/passkeycredential\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/auth0\/passkeycredential\/isbackedup","title":"let isBackedUp: Bool","type":"property"},{"path":"\/documentation\/auth0\/passkeycredential\/publickey","title":"let publicKey: Data","type":"property"},{"path":"\/documentation\/auth0\/passkeycredential\/userhandle","title":"let userHandle: Data","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeycredential\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/auth0\/passkeycredential\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeycredential\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/auth0\/passkeycredential\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/passkeycredential","title":"PasskeyCredential","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeyenrollmentchallenge\/authenticationmethodid","title":"let authenticationMethodId: String","type":"property"},{"path":"\/documentation\/auth0\/passkeyenrollmentchallenge\/authenticationsession","title":"let authenticationSession: String","type":"property"},{"path":"\/documentation\/auth0\/passkeyenrollmentchallenge\/challengedata","title":"let challengeData: Data","type":"property"},{"path":"\/documentation\/auth0\/passkeyenrollmentchallenge\/relyingpartyid","title":"let relyingPartyId: String","type":"property"},{"path":"\/documentation\/auth0\/passkeyenrollmentchallenge\/userid","title":"let userId: Data","type":"property"},{"path":"\/documentation\/auth0\/passkeyenrollmentchallenge\/username","title":"let userName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeyenrollmentchallenge\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/auth0\/passkeyenrollmentchallenge\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/passkeyenrollmentchallenge","title":"PasskeyEnrollmentChallenge","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeyloginchallenge\/authenticationsession","title":"let authenticationSession: String","type":"property"},{"path":"\/documentation\/auth0\/passkeyloginchallenge\/challengedata","title":"let challengeData: Data","type":"property"},{"path":"\/documentation\/auth0\/passkeyloginchallenge\/relyingpartyid","title":"let relyingPartyId: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeyloginchallenge\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/auth0\/passkeyloginchallenge\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/passkeyloginchallenge","title":"PasskeyLoginChallenge","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeysignupchallenge\/authenticationsession","title":"let authenticationSession: String","type":"property"},{"path":"\/documentation\/auth0\/passkeysignupchallenge\/challengedata","title":"let challengeData: Data","type":"property"},{"path":"\/documentation\/auth0\/passkeysignupchallenge\/relyingpartyid","title":"let relyingPartyId: String","type":"property"},{"path":"\/documentation\/auth0\/passkeysignupchallenge\/userid","title":"let userId: Data","type":"property"},{"path":"\/documentation\/auth0\/passkeysignupchallenge\/username","title":"let userName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeysignupchallenge\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/auth0\/passkeysignupchallenge\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/passkeysignupchallenge","title":"PasskeySignupChallenge","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/request\/headers(_:)","title":"func headers([String : String]) -> Request<T, E>","type":"method"},{"path":"\/documentation\/auth0\/request\/parameters(_:)","title":"func parameters([String : Any]) -> Request<T, E>","type":"method"},{"path":"\/documentation\/auth0\/request\/start()-132e1","title":"func start() -> AnyPublisher<T, E>","type":"method"},{"path":"\/documentation\/auth0\/request\/start()-8gjgk","title":"func start() async throws -> T","type":"method"},{"path":"\/documentation\/auth0\/request\/start(_:)","title":"func start(Callback)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/auth0\/request\/callback","title":"Request.Callback","type":"typealias"}],"path":"\/documentation\/auth0\/request","title":"Request","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/ssocredentials\/init(sessiontransfertoken:issuedtokentype:expiresin:idtoken:refreshtoken:)","title":"init(sessionTransferToken: String, issuedTokenType: String, expiresIn: Date, idToken: String, refreshToken: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/ssocredentials\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/auth0\/ssocredentials\/expiresin","title":"let expiresIn: Date","type":"property"},{"path":"\/documentation\/auth0\/ssocredentials\/idtoken","title":"let idToken: String","type":"property"},{"path":"\/documentation\/auth0\/ssocredentials\/issuedtokentype","title":"let issuedTokenType: String","type":"property"},{"path":"\/documentation\/auth0\/ssocredentials\/refreshtoken","title":"let refreshToken: String?","type":"property"},{"path":"\/documentation\/auth0\/ssocredentials\/sessiontransfertoken","title":"let sessionTransferToken: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/ssocredentials\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/auth0\/ssocredentials\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/ssocredentials\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/auth0\/ssocredentials\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/ssocredentials","title":"SSOCredentials","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/telemetry\/init()","title":"init()","type":"init"}],"path":"\/documentation\/auth0\/telemetry","title":"Telemetry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/userinfo\/init(json:)","title":"init?(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/userinfo\/address","title":"let address: [String : String]?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/birthdate","title":"let birthdate: String?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/customclaims","title":"let customClaims: [String : Any]?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/email","title":"let email: String?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/emailverified","title":"let emailVerified: Bool?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/familyname","title":"let familyName: String?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/gender","title":"let gender: String?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/givenname","title":"let givenName: String?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/locale","title":"let locale: Locale?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/middlename","title":"let middleName: String?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/nickname","title":"let nickname: String?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/phonenumber","title":"let phoneNumber: String?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/phonenumberverified","title":"let phoneNumberVerified: Bool?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/picture","title":"let picture: URL?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/preferredusername","title":"let preferredUsername: String?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/profile","title":"let profile: URL?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/sub","title":"let sub: String","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/updatedat","title":"let updatedAt: Date?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/website","title":"let website: URL?","type":"property"},{"path":"\/documentation\/auth0\/userinfo\/zoneinfo","title":"let zoneinfo: TimeZone?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/userinfo\/publicclaims","title":"static let publicClaims: [String]","type":"property"}],"path":"\/documentation\/auth0\/userinfo","title":"UserInfo","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/auth0\/webautherror\/~=(_:_:)-3690","title":"static func ~= (WebAuthError, WebAuthError) -> Bool","type":"op"},{"path":"\/documentation\/auth0\/webautherror\/~=(_:_:)-6ibkd","title":"static func ~= (WebAuthError, Error) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/webautherror\/cause","title":"let cause: Error?","type":"property"},{"path":"\/documentation\/auth0\/webautherror\/debugdescription","title":"var debugDescription: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/webautherror\/idtokenvalidationfailed","title":"static let idTokenValidationFailed: WebAuthError","type":"property"},{"path":"\/documentation\/auth0\/webautherror\/invalidinvitationurl","title":"static let invalidInvitationURL: WebAuthError","type":"property"},{"path":"\/documentation\/auth0\/webautherror\/noauthorizationcode","title":"static let noAuthorizationCode: WebAuthError","type":"property"},{"path":"\/documentation\/auth0\/webautherror\/nobundleidentifier","title":"static let noBundleIdentifier: WebAuthError","type":"property"},{"path":"\/documentation\/auth0\/webautherror\/other","title":"static let other: WebAuthError","type":"property"},{"path":"\/documentation\/auth0\/webautherror\/pkcenotallowed","title":"static let pkceNotAllowed: WebAuthError","type":"property"},{"path":"\/documentation\/auth0\/webautherror\/transactionactivealready","title":"static let transactionActiveAlready: WebAuthError","type":"property"},{"path":"\/documentation\/auth0\/webautherror\/unknown","title":"static let unknown: WebAuthError","type":"property"},{"path":"\/documentation\/auth0\/webautherror\/usercancelled","title":"static let userCancelled: WebAuthError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/webautherror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/auth0\/webautherror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/auth0\/webautherror\/auth0error-implementations","title":"Auth0Error Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/auth0\/webautherror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/auth0\/webautherror\/==(_:_:)","title":"static func == (WebAuthError, WebAuthError) -> Bool","type":"op"}],"path":"\/documentation\/auth0\/webautherror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/webautherror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/auth0\/webautherror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/auth0\/webautherror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/auth0\/webautherror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/webautherror","title":"WebAuthError","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/webauthentication\/cancel()","title":"static func cancel()","type":"method"},{"path":"\/documentation\/auth0\/webauthentication\/resume(with:)","title":"static func resume(with: URL) -> Bool","type":"method"},{"path":"\/documentation\/auth0\/webauthentication\/safariprovider(style:)","title":"static func safariProvider(style: UIModalPresentationStyle) -> WebAuthProvider","type":"method"},{"path":"\/documentation\/auth0\/webauthentication\/webviewprovider(style:)","title":"static func webViewProvider(style: UIModalPresentationStyle) -> WebAuthProvider","type":"method"}],"path":"\/documentation\/auth0\/webauthentication","title":"WebAuthentication","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/auth0\/defaultscope","title":"let defaultScope: String","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/auth0\/authentication(clientid:domain:session:)","title":"func authentication(clientId: String, domain: String, session: URLSession) -> Authentication","type":"func"},{"path":"\/documentation\/auth0\/authentication(session:bundle:)","title":"func authentication(session: URLSession, bundle: Bundle) -> Authentication","type":"func"},{"path":"\/documentation\/auth0\/myaccount(token:domain:session:)","title":"func myAccount(token: String, domain: String, session: URLSession) -> MyAccount","type":"func"},{"path":"\/documentation\/auth0\/myaccount(token:session:bundle:)","title":"func myAccount(token: String, session: URLSession, bundle: Bundle) -> MyAccount","type":"func"},{"path":"\/documentation\/auth0\/users(token:domain:session:)","title":"func users(token: String, domain: String, session: URLSession) -> Users","type":"func"},{"path":"\/documentation\/auth0\/users(token:session:bundle:)","title":"func users(token: String, session: URLSession, bundle: Bundle) -> Users","type":"func"},{"path":"\/documentation\/auth0\/webauth(clientid:domain:session:)","title":"func webAuth(clientId: String, domain: String, session: URLSession) -> WebAuth","type":"func"},{"path":"\/documentation\/auth0\/webauth(session:bundle:)","title":"func webAuth(session: URLSession, bundle: Bundle) -> WebAuth","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/auth0\/authenticationresult","title":"AuthenticationResult","type":"typealias"},{"path":"\/documentation\/auth0\/credentialsmanagerresult","title":"CredentialsManagerResult","type":"typealias"},{"path":"\/documentation\/auth0\/databaseuser","title":"DatabaseUser","type":"typealias"},{"path":"\/documentation\/auth0\/managementobject","title":"ManagementObject","type":"typealias"},{"path":"\/documentation\/auth0\/managementresult","title":"ManagementResult","type":"typealias"},{"path":"\/documentation\/auth0\/myaccountresult","title":"MyAccountResult","type":"typealias"},{"path":"\/documentation\/auth0\/webauthprovider","title":"WebAuthProvider","type":"typealias"},{"path":"\/documentation\/auth0\/webauthprovidercallback","title":"WebAuthProviderCallback","type":"typealias"},{"path":"\/documentation\/auth0\/webauthresult","title":"WebAuthResult","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeydevicetype\/multidevice","title":"case multiDevice","type":"case"},{"path":"\/documentation\/auth0\/passkeydevicetype\/singledevice","title":"case singleDevice","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeydevicetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeydevicetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/auth0\/passkeydevicetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeydevicetype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeydevicetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/passkeydevicetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/auth0\/passkeydevicetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/passkeydevicetype","title":"PasskeyDeviceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/auth0\/passwordlesstype\/androidlink","title":"case androidLink","type":"case"},{"path":"\/documentation\/auth0\/passwordlesstype\/code","title":"case code","type":"case"},{"path":"\/documentation\/auth0\/passwordlesstype\/ioslink","title":"case iOSLink","type":"case"},{"path":"\/documentation\/auth0\/passwordlesstype\/weblink","title":"case webLink","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/auth0\/passwordlesstype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/auth0\/passwordlesstype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/auth0\/passwordlesstype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/passwordlesstype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/passwordlesstype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/auth0\/passwordlesstype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/passwordlesstype","title":"PasswordlessType","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/auth0\/authenticationservices\/asauthorizationpublickeycredentialattachment\/stringvalue","title":"var stringValue: String?","type":"property"}],"path":"\/documentation\/auth0\/authenticationservices\/asauthorizationpublickeycredentialattachment","title":"ASAuthorizationPublicKeyCredentialAttachment","type":"extension"}],"path":"\/documentation\/auth0\/authenticationservices","title":"AuthenticationServices","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/foundation\/data\/a0_encodebase64urlsafe()","title":"func a0_encodeBase64URLSafe() -> String?","type":"method"}],"path":"\/documentation\/auth0\/foundation\/data","title":"Data","type":"extension"}],"path":"\/documentation\/auth0\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/simplekeychain\/simplekeychain\/deleteentry(forkey:)","title":"func deleteEntry(forKey: String) -> Bool","type":"method"},{"path":"\/documentation\/auth0\/simplekeychain\/simplekeychain\/getentry(forkey:)","title":"func getEntry(forKey: String) -> Data?","type":"method"},{"path":"\/documentation\/auth0\/simplekeychain\/simplekeychain\/setentry(_:forkey:)","title":"func setEntry(Data, forKey: String) -> Bool","type":"method"}],"path":"\/documentation\/auth0\/simplekeychain\/simplekeychain\/credentialsstorage-implementations","title":"CredentialsStorage Implementations","type":"symbol"}],"path":"\/documentation\/auth0\/simplekeychain\/simplekeychain","title":"SimpleKeychain","type":"extension"}],"path":"\/documentation\/auth0\/simplekeychain","title":"SimpleKeychain","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/auth0\/swift\/string\/a0_decodebase64urlsafe()","title":"func a0_decodeBase64URLSafe() -> Data?","type":"method"}],"path":"\/documentation\/auth0\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/auth0\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/auth0","title":"Auth0","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}