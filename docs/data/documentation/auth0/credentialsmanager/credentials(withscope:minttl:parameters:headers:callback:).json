{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"credentials","kind":"identifier"},{"kind":"text","text":"("},{"text":"withScope","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"scope","kind":"internalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"text":"minTTL","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":" = 0, ","kind":"text"},{"kind":"externalParam","text":"parameters"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"text":"] = [:], ","kind":"text"},{"text":"headers","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"] = [:], ","kind":"text"},{"kind":"externalParam","text":"callback"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"text":" (","kind":"text"},{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerResult","kind":"typeIdentifier","preciseIdentifier":"s:5Auth024CredentialsManagerResulta","text":"CredentialsManagerResult"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/Credentials","text":"Credentials","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"Space-separated list of scope values to request when renewing credentials. Defaults to ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", which will ask for the same scopes that were requested on login."}],"type":"paragraph"}],"name":"scope"},{"content":[{"inlineContent":[{"text":"Minimum time in seconds the access token must remain valid to avoid being renewed. Defaults to ","type":"text"},{"type":"codeVoice","code":"0"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"minTTL"},{"name":"parameters","content":[{"type":"paragraph","inlineContent":[{"text":"Additional parameters to use when renewing credentials.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Additional headers to use when renewing credentials."}]}],"name":"headers"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Callback that receives a "},{"code":"Result","type":"codeVoice"},{"text":" containing either the userâ€™s credentials or an error.","type":"text"}]}],"name":"callback"}]},{"content":[{"type":"heading","text":"Usage","anchor":"Usage","level":2},{"code":["credentialsManager.credentials { result in","    switch result {","    case .success(let credentials):","        print(\"Obtained credentials: \\(credentials)\")","    case .failure(let error):","        print(\"Failed with: \\(error)\")","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"To avoid retrieving access tokens with too little time left, you can enforce a minimum TTL:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["credentialsManager.credentials(minTTL: 60) { print($0) }"]},{"inlineContent":[{"type":"text","text":"If you need to specify custom parameters or headers for the credentials renewal:"}],"type":"paragraph"},{"code":["credentialsManager.credentials(parameters: [\"key\": \"value\"],","                               headers: [\"key\": \"value\"]) { print($0) }"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"When renewing credentials you can get a downscoped access token by requesting fewer scopes than were requested","type":"text"},{"type":"text","text":" "},{"text":"on login. If you specify fewer scopes, the credentials will be renewed immediately, regardless of whether they","type":"text"},{"type":"text","text":" "},{"text":"are expired or not.","type":"text"}]},{"syntax":"swift","code":["credentialsManager.credentials(scope: \"openid offline_access\") { print($0) }"],"type":"codeListing"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The scope "},{"code":"offline_access","type":"codeVoice"},{"text":" to have been requested on login to get a refresh token from Auth0. If","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the credentials are expired and there is no refresh token, the callback will be called with a"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError\/noRefreshToken","type":"reference"},{"type":"text","text":" error."}]}],"style":"note","name":"Requires"},{"style":"warning","type":"aside","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not call "},{"type":"codeVoice","code":"store(credentials:)"},{"type":"text","text":" afterward. The Credentials Manager automatically persists the"},{"type":"text","text":" "},{"type":"text","text":"renewed credentials. Since this method is thread-safe and "},{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/store(credentials:)","type":"reference","isActive":true},{"text":" is not, calling it anyway can","type":"text"},{"type":"text","text":" "},{"type":"text","text":"cause concurrency issues."}]}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"To ensure that no concurrent renewal requests get made, do not call this method from multiple","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Credentials Manager instances. The Credentials Manager cannot synchronize requests across instances."}]}],"name":"Important","style":"important"}],"kind":"content"}],"kind":"symbol","seeAlsoSections":[{"identifiers":["https:\/\/auth0.com\/docs\/secure\/tokens\/refresh-tokens","https:\/\/auth0.com\/docs\/api\/authentication#refresh-token"],"title":"Related Documentation"}],"abstract":[{"type":"text","text":"Retrieves credentials from the Keychain and yields new credentials using the refresh token if the access token"},{"text":" ","type":"text"},{"type":"text","text":"is expired. Otherwise, the retrieved credentials will be returned via the success case as they are not expired."},{"type":"text","text":" "},{"text":"Renewed credentials will be stored in the Keychain. ","type":"text"},{"inlineContent":[{"type":"text","text":"This method is thread-safe"}],"type":"strong"},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/auth0\/credentialsmanager\/credentials(withscope:minttl:parameters:headers:callback:)"]}],"metadata":{"externalID":"s:5Auth018CredentialsManagerV11credentials9withScope6minTTL10parameters7headers8callbackySSSg_SiSDySSypGSDyS2SGys6ResultOyAA0B0CAA0bC5ErrorVGctF","roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"credentials"},{"kind":"text","text":"("},{"text":"withScope","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"text":"minTTL","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"text":"parameters","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:5Auth024CredentialsManagerResulta","text":"CredentialsManagerResult","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","kind":"typeIdentifier","text":"Credentials"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"symbolKind":"method","title":"credentials(withScope:minTTL:parameters:headers:callback:)","modules":[{"name":"Auth0"}]},"identifier":{"url":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:callback:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.auth0.Auth0\/documentation\/Auth0","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager"]]},"references":{"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManagerResult":{"type":"topic","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerResult","kind":"symbol","url":"\/documentation\/auth0\/credentialsmanagerresult","navigatorTitle":[{"text":"CredentialsManagerResult","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"CredentialsManagerResult","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"Result"},{"text":" wrapper for Credentials Manager operations.","type":"text"}],"title":"CredentialsManagerResult","role":"symbol"},"doc://com.auth0.Auth0/documentation/Auth0":{"type":"topic","title":"Auth0","url":"\/documentation\/auth0","abstract":[{"type":"text","text":"SDK for Apple platforms."}],"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0","role":"collection","kind":"symbol"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager":{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager","type":"topic","url":"\/documentation\/auth0\/credentialsmanager","kind":"symbol","navigatorTitle":[{"text":"CredentialsManager","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CredentialsManager"}],"abstract":[{"text":"Credentials management utility for securely storing and retrieving the userâ€™s credentials from the Keychain.","type":"text"}],"title":"CredentialsManager","role":"symbol"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/credentials(withScope:minTTL:parameters:headers:callback:)":{"type":"topic","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:callback:)","kind":"symbol","url":"\/documentation\/auth0\/credentialsmanager\/credentials(withscope:minttl:parameters:headers:callback:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"credentials","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withScope"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"text":"minTTL","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"parameters"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"headers"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"], ","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:5Auth024CredentialsManagerResulta","text":"CredentialsManagerResult","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Credentials","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"text":"Retrieves credentials from the Keychain and yields new credentials using the refresh token if the access token","type":"text"},{"type":"text","text":" "},{"text":"is expired. Otherwise, the retrieved credentials will be returned via the success case as they are not expired.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Renewed credentials will be stored in the Keychain. "},{"inlineContent":[{"text":"This method is thread-safe","type":"text"}],"type":"strong"},{"type":"text","text":"."}],"title":"credentials(withScope:minTTL:parameters:headers:callback:)","role":"symbol"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManagerError/noRefreshToken":{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError\/noRefreshToken","type":"topic","url":"\/documentation\/auth0\/credentialsmanagererror\/norefreshtoken","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"noRefreshToken","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Auth023CredentialsManagerErrorV","text":"CredentialsManagerError"}],"abstract":[{"type":"text","text":"The stored "},{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/Credentials","isActive":true,"type":"reference"},{"text":" instance does not contain a refresh token.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This error does not include a "},{"type":"reference","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/Auth0Error\/cause-9wuyi","isActive":true},{"text":".","type":"text"}],"title":"noRefreshToken","role":"symbol"},"https://auth0.com/docs/secure/tokens/refresh-tokens":{"titleInlineContent":[{"type":"text","text":"Refresh Tokens"}],"title":"Refresh Tokens","url":"https:\/\/auth0.com\/docs\/secure\/tokens\/refresh-tokens","type":"link","identifier":"https:\/\/auth0.com\/docs\/secure\/tokens\/refresh-tokens"},"doc://com.auth0.Auth0/documentation/Auth0/Auth0Error/cause-9wuyi":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cause","kind":"identifier"},{"kind":"text","text":": "},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/Auth0Error\/cause-9wuyi","title":"cause","url":"\/documentation\/auth0\/auth0error\/cause-9wuyi","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The underlying "},{"type":"codeVoice","code":"Error"},{"text":" value, if any. Defaults to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"topic"},"https://auth0.com/docs/api/authentication#refresh-token":{"identifier":"https:\/\/auth0.com\/docs\/api\/authentication#refresh-token","title":"Authentication API Endpoint","type":"link","titleInlineContent":[{"text":"Authentication API Endpoint","type":"text"}],"url":"https:\/\/auth0.com\/docs\/api\/authentication#refresh-token"},"doc://com.auth0.Auth0/documentation/Auth0/Credentials":{"role":"symbol","title":"Credentials","abstract":[{"type":"text","text":"Userâ€™s credentials obtained from Auth0."}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Credentials","kind":"identifier"}],"url":"\/documentation\/auth0\/credentials","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Credentials","kind":"identifier"}],"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/Credentials"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/store(credentials:)":{"type":"topic","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/store(credentials:)","kind":"symbol","url":"\/documentation\/auth0\/credentialsmanager\/store(credentials:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"store"},{"text":"(","kind":"text"},{"text":"credentials","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","text":"Credentials"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"Stores a credentials instance in the Keychain.","type":"text"}],"title":"store(credentials:)","role":"symbol"}}}