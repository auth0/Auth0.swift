{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"credentials"},{"kind":"text","text":"("},{"text":"withScope","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"scope","kind":"internalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"text":"minTTL","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":" = 0, ","kind":"text"},{"kind":"externalParam","text":"parameters"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"text":"] = [:], ","kind":"text"},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"] = [:]) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Credentials","kind":"typeIdentifier","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/Credentials","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"scope","content":[{"inlineContent":[{"text":"Space-separated list of scope values to request when renewing credentials. Defaults to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", which will ask for the same scopes that were requested on login.","type":"text"}],"type":"paragraph"}]},{"name":"minTTL","content":[{"inlineContent":[{"type":"text","text":"Minimum time in seconds the access token must remain valid to avoid being renewed. Defaults to "},{"type":"codeVoice","code":"0"},{"type":"text","text":"."}],"type":"paragraph"}]},{"name":"parameters","content":[{"inlineContent":[{"text":"Additional parameters to use when renewing credentials.","type":"text"}],"type":"paragraph"}]},{"name":"headers","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Additional headers to use when renewing credentials."}]}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The userâ€™s credentials.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Usage","type":"heading","anchor":"Usage"},{"type":"codeListing","code":["do {","    let credentials = try await credentialsManager.credentials()","    print(\"Obtained credentials: \\(credentials)\")","} catch {","    print(\"Failed with: \\(error)\")","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"To avoid retrieving access tokens with too little time left, you can enforce a minimum TTL:","type":"text"}]},{"syntax":"swift","code":["let credentials = try await credentialsManager.credentials(minTTL: 60)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If you need to specify custom parameters or headers for the credentials renewal:"}],"type":"paragraph"},{"code":["let credentials = try await credentialsManager.credentials(parameters: [\"key\": \"value\"],","                                                           headers: [\"key\": \"value\"])"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"When renewing credentials you can get a downscoped access token by requesting fewer scopes than were requested"},{"type":"text","text":" "},{"type":"text","text":"on login. If you specify fewer scopes, the credentials will be renewed immediately, regardless of whether they"},{"text":" ","type":"text"},{"type":"text","text":"are expired or not."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let credentials = try await credentialsManager.credentials(scope: \"openid offline_access\")"]},{"name":"Throws","type":"aside","style":"note","content":[{"inlineContent":[{"text":"An error of type ","type":"text"},{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"name":"Requires","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The scope "},{"code":"offline_access","type":"codeVoice"},{"text":" to have been requested on login to get a refresh token from Auth0. If","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the credentials are expired and there is no refresh token, a "},{"isActive":true,"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError\/noRefreshToken","type":"reference"},{"text":" error","type":"text"},{"type":"text","text":" "},{"type":"text","text":"will be thrown."}]}],"style":"note","type":"aside"},{"content":[{"inlineContent":[{"type":"text","text":"Do not call "},{"type":"codeVoice","code":"store(credentials:)"},{"type":"text","text":" afterward. The Credentials Manager automatically persists the"},{"text":" ","type":"text"},{"text":"renewed credentials. Since this method is thread-safe and ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/store(credentials:)","isActive":true},{"type":"text","text":" is not, calling it anyway can"},{"text":" ","type":"text"},{"type":"text","text":"cause concurrency issues."}],"type":"paragraph"}],"name":"Warning","style":"warning","type":"aside"},{"content":[{"inlineContent":[{"text":"To ensure that no concurrent renewal requests get made, do not call this method from multiple","type":"text"},{"type":"text","text":" "},{"text":"Credentials Manager instances. The Credentials Manager cannot synchronize requests across instances.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"important","name":"Important"}]}],"identifier":{"url":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:)-11d2f","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/auth0\/credentialsmanager\/credentials(withscope:minttl:parameters:headers:)-11d2f"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.auth0.Auth0\/documentation\/Auth0","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager"]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["https:\/\/auth0.com\/docs\/secure\/tokens\/refresh-tokens","https:\/\/auth0.com\/docs\/api\/authentication#refresh-token","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/RefreshTokens"]}],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Auth0"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"credentials"},{"kind":"text","text":"("},{"text":"withScope","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"minTTL","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parameters"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"headers"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Credentials","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials"}],"extendedModule":"Auth0","title":"credentials(withScope:minTTL:parameters:headers:)","symbolKind":"method","externalID":"s:5Auth018CredentialsManagerV11credentials9withScope6minTTL10parameters7headersAA0B0CSSSg_SiSDySSypGSDyS2SGtYaKF","role":"symbol"},"abstract":[{"text":"Retrieves credentials from the Keychain and yields new credentials using the refresh token if the access token","type":"text"},{"text":" ","type":"text"},{"text":"is expired. Otherwise, return the retrieved credentials as they are not expired. Renewed credentials will be","type":"text"},{"type":"text","text":" "},{"text":"stored in the Keychain. ","type":"text"},{"inlineContent":[{"type":"text","text":"This method is thread-safe"}],"type":"strong"},{"type":"text","text":"."}],"references":{"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManagerError/noRefreshToken":{"title":"noRefreshToken","abstract":[{"type":"text","text":"The stored "},{"type":"reference","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/Credentials","isActive":true},{"text":" instance does not contain a refresh token.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This error does not include a "},{"type":"reference","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/Auth0Error\/cause-9wuyi","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"noRefreshToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Auth023CredentialsManagerErrorV","kind":"typeIdentifier","text":"CredentialsManagerError"}],"type":"topic","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError\/noRefreshToken","role":"symbol","kind":"symbol","url":"\/documentation\/auth0\/credentialsmanagererror\/norefreshtoken"},"doc://com.auth0.Auth0/documentation/Auth0/RefreshTokens":{"type":"topic","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/RefreshTokens","role":"article","url":"\/documentation\/auth0\/refreshtokens","abstract":[],"title":"Refresh Tokens: Common Errors","kind":"article"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManagerError":{"navigatorTitle":[{"kind":"identifier","text":"CredentialsManagerError"}],"title":"CredentialsManagerError","abstract":[{"type":"text","text":"Represents an error during a Credentials Manager operation."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CredentialsManagerError"}],"type":"topic","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError","role":"symbol","kind":"symbol","url":"\/documentation\/auth0\/credentialsmanagererror"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/credentials(withScope:minTTL:parameters:headers:)-11d2f":{"abstract":[{"text":"Retrieves credentials from the Keychain and yields new credentials using the refresh token if the access token","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is expired. Otherwise, return the retrieved credentials as they are not expired. Renewed credentials will be"},{"type":"text","text":" "},{"text":"stored in the Keychain. ","type":"text"},{"type":"strong","inlineContent":[{"text":"This method is thread-safe","type":"text"}]},{"text":".","type":"text"}],"url":"\/documentation\/auth0\/credentialsmanager\/credentials(withscope:minttl:parameters:headers:)-11d2f","title":"credentials(withScope:minTTL:parameters:headers:)","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:)-11d2f","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"credentials","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withScope"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"text":"minTTL","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":", ","kind":"text"},{"text":"parameters","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"]) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Credentials","kind":"typeIdentifier","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials"}],"type":"topic","kind":"symbol","role":"symbol"},"https://auth0.com/docs/api/authentication#refresh-token":{"titleInlineContent":[{"text":"Authentication API Endpoint","type":"text"}],"title":"Authentication API Endpoint","identifier":"https:\/\/auth0.com\/docs\/api\/authentication#refresh-token","url":"https:\/\/auth0.com\/docs\/api\/authentication#refresh-token","type":"link"},"https://auth0.com/docs/secure/tokens/refresh-tokens":{"title":"Refresh Tokens","url":"https:\/\/auth0.com\/docs\/secure\/tokens\/refresh-tokens","identifier":"https:\/\/auth0.com\/docs\/secure\/tokens\/refresh-tokens","titleInlineContent":[{"type":"text","text":"Refresh Tokens"}],"type":"link"},"doc://com.auth0.Auth0/documentation/Auth0":{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0","kind":"symbol","url":"\/documentation\/auth0","type":"topic","role":"collection","title":"Auth0","abstract":[{"type":"text","text":"SDK for Apple platforms."}]},"doc://com.auth0.Auth0/documentation/Auth0/Auth0Error/cause-9wuyi":{"title":"cause","abstract":[{"type":"text","text":"The underlying "},{"code":"Error","type":"codeVoice"},{"text":" value, if any. Defaults to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cause"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/Auth0Error\/cause-9wuyi","role":"symbol","kind":"symbol","url":"\/documentation\/auth0\/auth0error\/cause-9wuyi"},"doc://com.auth0.Auth0/documentation/Auth0/Credentials":{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/Credentials","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Credentials","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Credentials"}],"url":"\/documentation\/auth0\/credentials","title":"Credentials","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Userâ€™s credentials obtained from Auth0."}],"kind":"symbol"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/store(credentials:)":{"title":"store(credentials:)","abstract":[{"type":"text","text":"Stores a credentials instance in the Keychain."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"store","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"credentials"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","kind":"typeIdentifier","text":"Credentials"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/store(credentials:)","role":"symbol","kind":"symbol","url":"\/documentation\/auth0\/credentialsmanager\/store(credentials:)"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager":{"navigatorTitle":[{"text":"CredentialsManager","kind":"identifier"}],"role":"symbol","url":"\/documentation\/auth0\/credentialsmanager","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CredentialsManager","kind":"identifier"}],"type":"topic","title":"CredentialsManager","kind":"symbol","abstract":[{"type":"text","text":"Credentials management utility for securely storing and retrieving the userâ€™s credentials from the Keychain."}]}}}