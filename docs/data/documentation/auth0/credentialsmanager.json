{"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/RefreshTokens"]}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CredentialsManager"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"aside","style":"warning","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"text":"The Credentials Manager is not thread-safe, except for its","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:callback:)","isActive":true},{"text":" and","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:callback:)"},{"type":"text","text":" methods. To avoid concurrency issues, do not call its"},{"type":"text","text":" "},{"type":"text","text":"non thread-safe methods and properties from different threads without proper synchronization."}]}]}]}],"hierarchy":{"paths":[["doc:\/\/com.auth0.Auth0\/documentation\/Auth0"]]},"abstract":[{"type":"text","text":"Credentials management utility for securely storing and retrieving the userâ€™s credentials from the Keychain."}],"metadata":{"modules":[{"name":"Auth0"}],"title":"CredentialsManager","externalID":"s:5Auth018CredentialsManagerV","role":"symbol","symbolKind":"struct","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CredentialsManager","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CredentialsManager"}]},"sections":[],"identifier":{"url":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/init(authentication:storeKey:storage:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/user"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/canRenew()","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/clear()","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:)-11d2f","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:)-7xldm","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:callback:)","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/enableBiometrics(withTitle:cancelTitle:fallbackTitle:evaluationPolicy:)","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/hasValid(minTTL:)","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:)-3jl3m","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:)-7yn20","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:callback:)","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/revoke(headers:)-6wgai","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/revoke(headers:)-9mzo6","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/revoke(headers:_:)","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/store(credentials:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/auth0\/credentialsmanager"]}],"references":{"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManagerError/revokeFailed":{"url":"\/documentation\/auth0\/credentialsmanagererror\/revokefailed","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError\/revokeFailed","type":"topic","title":"revokeFailed","abstract":[{"type":"text","text":"The revocation of the refresh token failed."},{"type":"text","text":" "},{"text":"The underlying ","type":"text"},{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/AuthenticationError","isActive":true,"type":"reference"},{"text":" can be accessed via the ","type":"text"},{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/Auth0Error\/cause-9wuyi","type":"reference","isActive":true},{"text":" property.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"revokeFailed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Auth023CredentialsManagerErrorV","text":"CredentialsManagerError"}]},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/renew(parameters:headers:)-3jl3m":{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:)-3jl3m","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"renew","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"parameters"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"kind":"text","text":"], "},{"text":"headers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"]) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Credentials","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","kind":"typeIdentifier"}],"role":"symbol","type":"topic","title":"renew(parameters:headers:)","kind":"symbol","url":"\/documentation\/auth0\/credentialsmanager\/renew(parameters:headers:)-3jl3m","abstract":[{"type":"text","text":"Renews credentials using the refresh token and stores them in the Keychain. "},{"inlineContent":[{"text":"This method is thread-safe","type":"text"}],"type":"strong"},{"type":"text","text":"."}]},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/init(authentication:storeKey:storage:)":{"title":"init(authentication:storeKey:storage:)","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/init(authentication:storeKey:storage:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"authentication","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Authentication","kind":"typeIdentifier","preciseIdentifier":"s:5Auth014AuthenticationP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"storeKey"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"storage"},{"kind":"text","text":": "},{"text":"CredentialsStorage","kind":"typeIdentifier","preciseIdentifier":"s:5Auth018CredentialsStorageP"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"CredentialsManager"},{"text":" instance.","type":"text"}],"url":"\/documentation\/auth0\/credentialsmanager\/init(authentication:storekey:storage:)","type":"topic"},"doc://com.auth0.Auth0/documentation/Auth0/RefreshTokens":{"role":"article","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/RefreshTokens","title":"Refresh Tokens: Common Errors","kind":"article","type":"topic","url":"\/documentation\/auth0\/refreshtokens","abstract":[]},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/credentials(withScope:minTTL:parameters:headers:)-11d2f":{"role":"symbol","title":"credentials(withScope:minTTL:parameters:headers:)","abstract":[{"text":"Retrieves credentials from the Keychain and yields new credentials using the refresh token if the access token","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is expired. Otherwise, return the retrieved credentials as they are not expired. Renewed credentials will be"},{"text":" ","type":"text"},{"type":"text","text":"stored in the Keychain. "},{"inlineContent":[{"text":"This method is thread-safe","type":"text"}],"type":"strong"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"credentials","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withScope"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"minTTL"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parameters"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"]) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","text":"Credentials"}],"url":"\/documentation\/auth0\/credentialsmanager\/credentials(withscope:minttl:parameters:headers:)-11d2f","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:)-11d2f"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/user":{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/user","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"user"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Auth08UserInfoV","text":"UserInfo"},{"text":"?","kind":"text"}],"url":"\/documentation\/auth0\/credentialsmanager\/user","abstract":[{"type":"text","text":"Retrieves the user information from the Keychain synchronously, without checking if the credentials are expired."},{"text":" ","type":"text"},{"type":"text","text":"The user information is read from the stored "},{"type":"reference","identifier":"https:\/\/auth0.com\/docs\/secure\/tokens\/id-tokens","isActive":true},{"text":".","type":"text"}],"kind":"symbol","title":"user"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManagerError":{"navigatorTitle":[{"text":"CredentialsManagerError","kind":"identifier"}],"url":"\/documentation\/auth0\/credentialsmanagererror","role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Represents an error during a Credentials Manager operation.","type":"text"}],"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError","title":"CredentialsManagerError","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CredentialsManagerError","kind":"identifier"}]},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/revoke(headers:_:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/revoke(headers:_:)","url":"\/documentation\/auth0\/credentialsmanager\/revoke(headers:_:)","title":"revoke(headers:_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"revoke","kind":"identifier"},{"text":"(","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"], ("},{"preciseIdentifier":"s:5Auth024CredentialsManagerResulta","text":"CredentialsManagerResult","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Calls the "},{"type":"codeVoice","code":"\/oauth\/revoke"},{"text":" endpoint to revoke the refresh token and then clears the credentials if the request","type":"text"},{"text":" ","type":"text"},{"text":"was successful. Otherwise, the credentials will not be cleared and the callback will be called with a failure","type":"text"},{"text":" ","type":"text"},{"text":"result containing a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError\/revokeFailed","isActive":true},{"type":"text","text":" error."}]},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/store(credentials:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"store"},{"kind":"text","text":"("},{"text":"credentials","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Credentials","kind":"typeIdentifier","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/auth0\/credentialsmanager\/store(credentials:)","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/store(credentials:)","kind":"symbol","abstract":[{"type":"text","text":"Stores a credentials instance in the Keychain."}],"type":"topic","role":"symbol","title":"store(credentials:)"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/renew(parameters:headers:callback:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"renew","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"parameters"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"], ","kind":"text"},{"text":"headers","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"CredentialsManagerResult","preciseIdentifier":"s:5Auth024CredentialsManagerResulta","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","text":"Credentials","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:callback:)","url":"\/documentation\/auth0\/credentialsmanager\/renew(parameters:headers:callback:)","title":"renew(parameters:headers:callback:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Renews credentials using the refresh token and stores them in the Keychain. "},{"inlineContent":[{"type":"text","text":"This method is thread-safe"}],"type":"strong"},{"type":"text","text":"."}]},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/enableBiometrics(withTitle:cancelTitle:fallbackTitle:evaluationPolicy:)":{"url":"\/documentation\/auth0\/credentialsmanager\/enablebiometrics(withtitle:canceltitle:fallbacktitle:evaluationpolicy:)","abstract":[{"text":"Enables biometric authentication for additional security during credentials retrieval.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"enableBiometrics"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withTitle"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"cancelTitle","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?, ","kind":"text"},{"text":"fallbackTitle","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"evaluationPolicy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"LAPolicy","kind":"typeIdentifier","preciseIdentifier":"c:@E@LAPolicy"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","title":"enableBiometrics(withTitle:cancelTitle:fallbackTitle:evaluationPolicy:)","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/enableBiometrics(withTitle:cancelTitle:fallbackTitle:evaluationPolicy:)"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/clear()":{"title":"clear()","role":"symbol","abstract":[{"type":"text","text":"Clears credentials stored in the Keychain."}],"url":"\/documentation\/auth0\/credentialsmanager\/clear()","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/clear()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"clear","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/credentials(withScope:minTTL:parameters:headers:callback:)":{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:callback:)","title":"credentials(withScope:minTTL:parameters:headers:callback:)","role":"symbol","abstract":[{"text":"Retrieves credentials from the Keychain and yields new credentials using the refresh token if the access token","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is expired. Otherwise, the retrieved credentials will be returned via the success case as they are not expired."},{"type":"text","text":" "},{"text":"Renewed credentials will be stored in the Keychain. ","type":"text"},{"inlineContent":[{"text":"This method is thread-safe","type":"text"}],"type":"strong"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"credentials"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withScope"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"minTTL"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"parameters","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"], "},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:5Auth024CredentialsManagerResulta","text":"CredentialsManagerResult"},{"kind":"text","text":"<"},{"preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","text":"Credentials","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"url":"\/documentation\/auth0\/credentialsmanager\/credentials(withscope:minttl:parameters:headers:callback:)","kind":"symbol","type":"topic"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/canRenew()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"canRenew"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/auth0\/credentialsmanager\/canrenew()","title":"canRenew()","abstract":[{"type":"text","text":"Checks that there are credentials stored, and that the credentials contain a refresh token. If you are using"},{"type":"text","text":" "},{"type":"text","text":"refresh tokens, use this method instead of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/hasValid(minTTL:)"},{"type":"text","text":" to check for stored credentials when your app"},{"type":"text","text":" "},{"type":"text","text":"starts up."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/canRenew()"},"https://auth0.com/docs/secure/tokens/id-tokens":{"titleInlineContent":[{"type":"text","text":"ID token"}],"title":"ID token","type":"link","url":"https:\/\/auth0.com\/docs\/secure\/tokens\/id-tokens","identifier":"https:\/\/auth0.com\/docs\/secure\/tokens\/id-tokens"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/renew(parameters:headers:)-7yn20":{"kind":"symbol","title":"renew(parameters:headers:)","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:)-7yn20","role":"symbol","type":"topic","abstract":[{"text":"Renews credentials using the refresh token and stores them in the Keychain. ","type":"text"},{"inlineContent":[{"type":"text","text":"This method is thread-safe"}],"type":"strong"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"renew","kind":"identifier"},{"text":"(","kind":"text"},{"text":"parameters","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"], ","kind":"text"},{"text":"headers","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]) -> ","kind":"text"},{"text":"AnyPublisher","kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","text":"Credentials"},{"text":", ","kind":"text"},{"text":"CredentialsManagerError","kind":"typeIdentifier","preciseIdentifier":"s:5Auth023CredentialsManagerErrorV"},{"text":">","kind":"text"}],"url":"\/documentation\/auth0\/credentialsmanager\/renew(parameters:headers:)-7yn20"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/revoke(headers:)-9mzo6":{"type":"topic","role":"symbol","abstract":[{"text":"Calls the ","type":"text"},{"code":"\/oauth\/revoke","type":"codeVoice"},{"text":" endpoint to revoke the refresh token and then clears the credentials if the request","type":"text"},{"type":"text","text":" "},{"text":"was successful. Otherwise, the credentials are not cleared and the subscription completes with an error.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"revoke"},{"kind":"text","text":"("},{"kind":"externalParam","text":"headers"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"]) -> "},{"text":"AnyPublisher","kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"text":"CredentialsManagerError","preciseIdentifier":"s:5Auth023CredentialsManagerErrorV","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/revoke(headers:)-9mzo6","kind":"symbol","url":"\/documentation\/auth0\/credentialsmanager\/revoke(headers:)-9mzo6","title":"revoke(headers:)"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/hasValid(minTTL:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hasValid","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"minTTL"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"hasValid(minTTL:)","role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Checks that there are credentials stored, and that the access token has not expired and will not expire within"},{"type":"text","text":" "},{"type":"text","text":"the specified TTL. If you are not using refresh tokens, use this method instead of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/canRenew()"},{"type":"text","text":" to"},{"text":" ","type":"text"},{"text":"check for stored credentials when your app starts up.","type":"text"}],"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/hasValid(minTTL:)","url":"\/documentation\/auth0\/credentialsmanager\/hasvalid(minttl:)"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager":{"url":"\/documentation\/auth0\/credentialsmanager","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager","type":"topic","title":"CredentialsManager","abstract":[{"text":"Credentials management utility for securely storing and retrieving the userâ€™s credentials from the Keychain.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CredentialsManager"}],"navigatorTitle":[{"kind":"identifier","text":"CredentialsManager"}]},"doc://com.auth0.Auth0/documentation/Auth0":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0","url":"\/documentation\/auth0","title":"Auth0","abstract":[{"type":"text","text":"SDK for Apple platforms."}],"role":"collection"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/credentials(withScope:minTTL:parameters:headers:)-7xldm":{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:)-7xldm","title":"credentials(withScope:minTTL:parameters:headers:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"credentials"},{"kind":"text","text":"("},{"text":"withScope","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"minTTL","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parameters"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV","text":"AnyPublisher"},{"text":"<","kind":"text"},{"text":"Credentials","kind":"typeIdentifier","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials"},{"text":", ","kind":"text"},{"text":"CredentialsManagerError","kind":"typeIdentifier","preciseIdentifier":"s:5Auth023CredentialsManagerErrorV"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol","abstract":[{"text":"Retrieves credentials from the Keychain and yields new credentials using the refresh token if the access token","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is expired. Otherwise, the subscription will complete with the retrieved credentials as they are not expired."},{"text":" ","type":"text"},{"type":"text","text":"Renewed credentials will be stored in the Keychain. "},{"type":"strong","inlineContent":[{"type":"text","text":"This method is thread-safe"}]},{"type":"text","text":"."}],"role":"symbol","url":"\/documentation\/auth0\/credentialsmanager\/credentials(withscope:minttl:parameters:headers:)-7xldm"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/revoke(headers:)-6wgai":{"url":"\/documentation\/auth0\/credentialsmanager\/revoke(headers:)-6wgai","kind":"symbol","title":"revoke(headers:)","type":"topic","abstract":[{"type":"text","text":"Calls the "},{"type":"codeVoice","code":"\/oauth\/revoke"},{"text":" endpoint to revoke the refresh token and then clears the credentials if the request","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"was successful. Otherwise, the credentials are not cleared and an error is thrown."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"revoke","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/revoke(headers:)-6wgai","role":"symbol"}}}