{"kind":"symbol","sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/init(authentication:storeKey:storage:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/user"]},{"identifiers":["doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/canRenew()","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/clear()","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:)-11d2f","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:)-7xldm","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:callback:)","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/enableBiometrics(withTitle:cancelTitle:fallbackTitle:evaluationPolicy:)","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/hasValid(minTTL:)","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:)-3jl3m","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:)-7yn20","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:callback:)","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/revoke(headers:)-6wgai","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/revoke(headers:)-9mzo6","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/revoke(headers:_:)","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/store(credentials:)"],"title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/com.auth0.Auth0\/documentation\/Auth0"]]},"abstract":[{"text":"Credentials management utility for securely storing and retrieving the userâ€™s credentials from the Keychain.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError","doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/RefreshTokens"],"title":"Related Documentation"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CredentialsManager"}],"languages":["swift"],"platforms":["iOS"]}]},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Credentials Manager is not thread-safe, except for its"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:callback:)"},{"type":"text","text":" and"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:callback:)","type":"reference","isActive":true},{"type":"text","text":" methods. To avoid concurrency issues, do not call its"},{"text":" ","type":"text"},{"type":"text","text":"non thread-safe methods and properties from different threads without proper synchronization."}]}],"type":"aside","name":"Warning","style":"warning"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/auth0\/credentialsmanager"]}],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CredentialsManager"}],"symbolKind":"struct","roleHeading":"Structure","role":"symbol","modules":[{"name":"Auth0"}],"navigatorTitle":[{"text":"CredentialsManager","kind":"identifier"}],"title":"CredentialsManager","externalID":"s:5Auth018CredentialsManagerV"},"identifier":{"url":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/user":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"user","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Auth08UserInfoV","kind":"typeIdentifier","text":"UserInfo"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[{"type":"text","text":"Retrieves the user information from the Keychain synchronously, without checking if the credentials are expired."},{"type":"text","text":" "},{"text":"The user information is read from the stored ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/auth0.com\/docs\/secure\/tokens\/id-tokens"},{"text":".","type":"text"}],"url":"\/documentation\/auth0\/credentialsmanager\/user","role":"symbol","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/user","title":"user","type":"topic"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/store(credentials:)":{"kind":"symbol","abstract":[{"text":"Stores a credentials instance in the Keychain.","type":"text"}],"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/store(credentials:)","title":"store(credentials:)","url":"\/documentation\/auth0\/credentialsmanager\/store(credentials:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"store","kind":"identifier"},{"text":"(","kind":"text"},{"text":"credentials","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Credentials","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/renew(parameters:headers:callback:)":{"abstract":[{"text":"Renews credentials using the refresh token and stores them in the Keychain. ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"This method is thread-safe"}]},{"text":".","type":"text"}],"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:callback:)","role":"symbol","url":"\/documentation\/auth0\/credentialsmanager\/renew(parameters:headers:callback:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"renew","kind":"identifier"},{"text":"(","kind":"text"},{"text":"parameters","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"headers"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:5Auth024CredentialsManagerResulta","text":"CredentialsManagerResult"},{"kind":"text","text":"<"},{"preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","kind":"typeIdentifier","text":"Credentials"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"title":"renew(parameters:headers:callback:)"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/credentials(withScope:minTTL:parameters:headers:)-11d2f":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"credentials"},{"text":"(","kind":"text"},{"text":"withScope","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"minTTL"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"parameters","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" : "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"]) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Credentials","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"Retrieves credentials from the Keychain and yields new credentials using the refresh token if the access token","type":"text"},{"text":" ","type":"text"},{"text":"is expired. Otherwise, return the retrieved credentials as they are not expired. Renewed credentials will be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"stored in the Keychain. "},{"inlineContent":[{"type":"text","text":"This method is thread-safe"}],"type":"strong"},{"text":".","type":"text"}],"url":"\/documentation\/auth0\/credentialsmanager\/credentials(withscope:minttl:parameters:headers:)-11d2f","role":"symbol","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:)-11d2f","title":"credentials(withScope:minTTL:parameters:headers:)","type":"topic"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/revoke(headers:)-9mzo6":{"type":"topic","title":"revoke(headers:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"revoke","kind":"identifier"},{"kind":"text","text":"("},{"text":"headers","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"]) -> ","kind":"text"},{"text":"AnyPublisher","kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"CredentialsManagerError","preciseIdentifier":"s:5Auth023CredentialsManagerErrorV"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Calls the "},{"code":"\/oauth\/revoke","type":"codeVoice"},{"type":"text","text":" endpoint to revoke the refresh token and then clears the credentials if the request"},{"type":"text","text":" "},{"type":"text","text":"was successful. Otherwise, the credentials are not cleared and the subscription completes with an error."}],"url":"\/documentation\/auth0\/credentialsmanager\/revoke(headers:)-9mzo6","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/revoke(headers:)-9mzo6"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/clear()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"clear"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/auth0\/credentialsmanager\/clear()","title":"clear()","type":"topic","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/clear()","role":"symbol","kind":"symbol","abstract":[{"text":"Clears credentials stored in the Keychain.","type":"text"}]},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManagerError/revokeFailed":{"url":"\/documentation\/auth0\/credentialsmanagererror\/revokefailed","abstract":[{"text":"The revocation of the refresh token failed.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The underlying "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/AuthenticationError"},{"type":"text","text":" can be accessed via the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/Auth0Error\/cause-9wuyi"},{"text":" property.","type":"text"}],"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError\/revokeFailed","title":"revokeFailed","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"revokeFailed","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Auth023CredentialsManagerErrorV","text":"CredentialsManagerError","kind":"typeIdentifier"}],"type":"topic"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/renew(parameters:headers:)-7yn20":{"abstract":[{"type":"text","text":"Renews credentials using the refresh token and stores them in the Keychain. "},{"inlineContent":[{"text":"This method is thread-safe","type":"text"}],"type":"strong"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"renew","kind":"identifier"},{"kind":"text","text":"("},{"text":"parameters","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":"], "},{"text":"headers","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"]) -> "},{"text":"AnyPublisher","kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","text":"Credentials"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CredentialsManagerError","preciseIdentifier":"s:5Auth023CredentialsManagerErrorV"},{"text":">","kind":"text"}],"type":"topic","title":"renew(parameters:headers:)","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:)-7yn20","role":"symbol","url":"\/documentation\/auth0\/credentialsmanager\/renew(parameters:headers:)-7yn20","kind":"symbol"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CredentialsManager"}],"url":"\/documentation\/auth0\/credentialsmanager","title":"CredentialsManager","navigatorTitle":[{"text":"CredentialsManager","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager","role":"symbol","kind":"symbol","abstract":[{"text":"Credentials management utility for securely storing and retrieving the userâ€™s credentials from the Keychain.","type":"text"}]},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/enableBiometrics(withTitle:cancelTitle:fallbackTitle:evaluationPolicy:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"enableBiometrics","kind":"identifier"},{"text":"(","kind":"text"},{"text":"withTitle","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cancelTitle"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"text":"fallbackTitle","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"text":"evaluationPolicy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LAPolicy","preciseIdentifier":"c:@E@LAPolicy","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Enables biometric authentication for additional security during credentials retrieval."}],"url":"\/documentation\/auth0\/credentialsmanager\/enablebiometrics(withtitle:canceltitle:fallbacktitle:evaluationpolicy:)","role":"symbol","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/enableBiometrics(withTitle:cancelTitle:fallbackTitle:evaluationPolicy:)","title":"enableBiometrics(withTitle:cancelTitle:fallbackTitle:evaluationPolicy:)","type":"topic"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/revoke(headers:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"revoke"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"], (","kind":"text"},{"kind":"typeIdentifier","text":"CredentialsManagerResult","preciseIdentifier":"s:5Auth024CredentialsManagerResulta"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"title":"revoke(headers:_:)","kind":"symbol","abstract":[{"type":"text","text":"Calls the "},{"code":"\/oauth\/revoke","type":"codeVoice"},{"text":" endpoint to revoke the refresh token and then clears the credentials if the request","type":"text"},{"type":"text","text":" "},{"text":"was successful. Otherwise, the credentials will not be cleared and the callback will be called with a failure","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"result containing a "},{"type":"reference","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError\/revokeFailed","isActive":true},{"type":"text","text":" error."}],"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/revoke(headers:_:)","url":"\/documentation\/auth0\/credentialsmanager\/revoke(headers:_:)","role":"symbol","type":"topic"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/hasValid(minTTL:)":{"abstract":[{"type":"text","text":"Checks that there are credentials stored, and that the access token has not expired and will not expire within"},{"type":"text","text":" "},{"text":"the specified TTL. If you are not using refresh tokens, use this method instead of ","type":"text"},{"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/canRenew()","isActive":true,"type":"reference"},{"type":"text","text":" to"},{"type":"text","text":" "},{"text":"check for stored credentials when your app starts up.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hasValid","kind":"identifier"},{"kind":"text","text":"("},{"text":"minTTL","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","title":"hasValid(minTTL:)","url":"\/documentation\/auth0\/credentialsmanager\/hasvalid(minttl:)","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/hasValid(minTTL:)"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/credentials(withScope:minTTL:parameters:headers:)-7xldm":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"credentials"},{"kind":"text","text":"("},{"text":"withScope","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"minTTL"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"parameters"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"], ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV","text":"AnyPublisher"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","text":"Credentials"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"CredentialsManagerError","preciseIdentifier":"s:5Auth023CredentialsManagerErrorV"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"type":"text","text":"Retrieves credentials from the Keychain and yields new credentials using the refresh token if the access token"},{"text":" ","type":"text"},{"text":"is expired. Otherwise, the subscription will complete with the retrieved credentials as they are not expired.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Renewed credentials will be stored in the Keychain. "},{"type":"strong","inlineContent":[{"type":"text","text":"This method is thread-safe"}]},{"type":"text","text":"."}],"url":"\/documentation\/auth0\/credentialsmanager\/credentials(withscope:minttl:parameters:headers:)-7xldm","role":"symbol","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:)-7xldm","title":"credentials(withScope:minTTL:parameters:headers:)","type":"topic"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/revoke(headers:)-6wgai":{"url":"\/documentation\/auth0\/credentialsmanager\/revoke(headers:)-6wgai","type":"topic","kind":"symbol","role":"symbol","title":"revoke(headers:)","abstract":[{"text":"Calls the ","type":"text"},{"type":"codeVoice","code":"\/oauth\/revoke"},{"text":" endpoint to revoke the refresh token and then clears the credentials if the request","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"was successful. Otherwise, the credentials are not cleared and an error is thrown."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"revoke","kind":"identifier"},{"text":"(","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"]) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/revoke(headers:)-6wgai"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/canRenew()":{"abstract":[{"type":"text","text":"Checks that there are credentials stored, and that the credentials contain a refresh token. If you are using"},{"type":"text","text":" "},{"text":"refresh tokens, use this method instead of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/hasValid(minTTL:)","isActive":true},{"type":"text","text":" to check for stored credentials when your app"},{"type":"text","text":" "},{"text":"starts up.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"canRenew"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","title":"canRenew()","url":"\/documentation\/auth0\/credentialsmanager\/canrenew()","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/canRenew()"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/init(authentication:storeKey:storage:)":{"type":"topic","kind":"symbol","url":"\/documentation\/auth0\/credentialsmanager\/init(authentication:storekey:storage:)","title":"init(authentication:storeKey:storage:)","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/init(authentication:storeKey:storage:)","role":"symbol","abstract":[{"text":"Creates a new ","type":"text"},{"code":"CredentialsManager","type":"codeVoice"},{"type":"text","text":" instance."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"authentication","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Authentication","kind":"typeIdentifier","preciseIdentifier":"s:5Auth014AuthenticationP"},{"kind":"text","text":", "},{"text":"storeKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"storage"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Auth018CredentialsStorageP","text":"CredentialsStorage","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManagerError":{"navigatorTitle":[{"kind":"identifier","text":"CredentialsManagerError"}],"abstract":[{"text":"Represents an error during a Credentials Manager operation.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CredentialsManagerError"}],"type":"topic","title":"CredentialsManagerError","role":"symbol","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManagerError","kind":"symbol","url":"\/documentation\/auth0\/credentialsmanagererror"},"https://auth0.com/docs/secure/tokens/id-tokens":{"url":"https:\/\/auth0.com\/docs\/secure\/tokens\/id-tokens","titleInlineContent":[{"text":"ID token","type":"text"}],"type":"link","identifier":"https:\/\/auth0.com\/docs\/secure\/tokens\/id-tokens","title":"ID token"},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/credentials(withScope:minTTL:parameters:headers:callback:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"credentials","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withScope"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"minTTL","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parameters"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"headers"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"callback"},{"text":": (","kind":"text"},{"text":"CredentialsManagerResult","kind":"typeIdentifier","preciseIdentifier":"s:5Auth024CredentialsManagerResulta"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Credentials","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"title":"credentials(withScope:minTTL:parameters:headers:callback:)","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/credentials(withScope:minTTL:parameters:headers:callback:)","kind":"symbol","role":"symbol","url":"\/documentation\/auth0\/credentialsmanager\/credentials(withscope:minttl:parameters:headers:callback:)","type":"topic","abstract":[{"type":"text","text":"Retrieves credentials from the Keychain and yields new credentials using the refresh token if the access token"},{"text":" ","type":"text"},{"type":"text","text":"is expired. Otherwise, the retrieved credentials will be returned via the success case as they are not expired."},{"type":"text","text":" "},{"type":"text","text":"Renewed credentials will be stored in the Keychain. "},{"inlineContent":[{"text":"This method is thread-safe","type":"text"}],"type":"strong"},{"text":".","type":"text"}]},"doc://com.auth0.Auth0/documentation/Auth0/CredentialsManager/renew(parameters:headers:)-3jl3m":{"url":"\/documentation\/auth0\/credentialsmanager\/renew(parameters:headers:)-3jl3m","type":"topic","kind":"symbol","role":"symbol","title":"renew(parameters:headers:)","abstract":[{"text":"Renews credentials using the refresh token and stores them in the Keychain. ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"This method is thread-safe"}]},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"renew"},{"kind":"text","text":"("},{"text":"parameters","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"headers"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@Auth0@objc(cs)A0Credentials","text":"Credentials"}],"identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/CredentialsManager\/renew(parameters:headers:)-3jl3m"},"doc://com.auth0.Auth0/documentation/Auth0":{"title":"Auth0","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0","abstract":[{"type":"text","text":"SDK for Apple platforms."}],"kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/auth0"},"doc://com.auth0.Auth0/documentation/Auth0/RefreshTokens":{"type":"topic","title":"Refresh Tokens: Common Errors","role":"article","kind":"article","identifier":"doc:\/\/com.auth0.Auth0\/documentation\/Auth0\/RefreshTokens","url":"\/documentation\/auth0\/refreshtokens","abstract":[]}}}