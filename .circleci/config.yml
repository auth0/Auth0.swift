version: 2
jobs:
  build-iOS-Swift-5.0:
    macos:
      xcode: "10.2.0"
    environment:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          HOMEBREW_LOGS: ~/homebrew-logs
          HOMEBREW_TEMP: ~/homebrew-temp
          HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - run: |
          brew install swiftlint
          bundle install --without=development
          grep -lR "shouldUseLaunchSchemeArgsEnv" *.* --null | xargs -0 sed -i '' -e 's/shouldUseLaunchSchemeArgsEnv = "YES"/shouldUseLaunchSchemeArgsEnv = "YES" codeCoverageEnabled = "YES"/g'
      - run:
          name: Bootstrap
          command: bundle exec fastlane ios bootstrap
      - run:
          name: Run test suite
          command: bundle exec fastlane ios ci
          environment:
            SCHEME: Auth0.iOS
            DEVICE: iPhone 8
            FASTLANE_EXPLICIT_OPEN_SIMULATOR: 2
      - run: |
          bash <(curl -s https://codecov.io/bash) -J 'Auth0'
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
      - store_test_results:
          path: fastlane/test_output
  build-iOS-Swift-4.2:
    macos:
      xcode: "10.2.0"
    environment:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          HOMEBREW_LOGS: ~/homebrew-logs
          HOMEBREW_TEMP: ~/homebrew-temp
          HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - run: |
          brew install swiftlint
          bundle install --without=development
          grep -lR "shouldUseLaunchSchemeArgsEnv" *.* --null | xargs -0 sed -i '' -e 's/shouldUseLaunchSchemeArgsEnv = "YES"/shouldUseLaunchSchemeArgsEnv = "YES" codeCoverageEnabled = "YES"/g'
          sed -i "" 's/SWIFT_VERSION = 5.0/SWIFT_VERSION = 4.2/g' "Auth0.xcodeproj/project.pbxproj"
      - run:
          name: Bootstrap
          command: bundle exec fastlane ios bootstrap
      - run:
          name: Run test suite
          command: bundle exec fastlane ios ci
          environment:
            SCHEME: Auth0.iOS
            DEVICE: iPhone 8
            FASTLANE_EXPLICIT_OPEN_SIMULATOR: 2
      - run: |
          bash <(curl -s https://codecov.io/bash) -J 'Auth0'
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
      - store_test_results:
          path: fastlane/test_output
  build-iOS-Swift-4.0:
    macos:
      xcode: "10.2.0"
    environment:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          HOMEBREW_LOGS: ~/homebrew-logs
          HOMEBREW_TEMP: ~/homebrew-temp
          HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - run: |
          brew install swiftlint
          bundle install --without=development
          grep -lR "shouldUseLaunchSchemeArgsEnv" *.* --null | xargs -0 sed -i '' -e 's/shouldUseLaunchSchemeArgsEnv = "YES"/shouldUseLaunchSchemeArgsEnv = "YES" codeCoverageEnabled = "YES"/g'
          sed -i "" 's/SWIFT_VERSION = 5.0/SWIFT_VERSION = 4.0/g' "Auth0.xcodeproj/project.pbxproj"
      - run:
          name: Bootstrap
          command: bundle exec fastlane ios bootstrap
      - run:
          name: Run test suite
          command: bundle exec fastlane ios ci
          environment:
            SCHEME: Auth0.iOS
            DEVICE: iPhone 8
            FASTLANE_EXPLICIT_OPEN_SIMULATOR: 2
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
  build-macOS-Swift-5.0:
    macos:
      xcode: "10.2.0"
    environment:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          HOMEBREW_LOGS: ~/homebrew-logs
          HOMEBREW_TEMP: ~/homebrew-temp
          HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - run: |
          brew install swiftlint
          bundle install --without=development
          grep -lR "shouldUseLaunchSchemeArgsEnv" *.* --null | xargs -0 sed -i '' -e 's/shouldUseLaunchSchemeArgsEnv = "YES"/shouldUseLaunchSchemeArgsEnv = "YES" codeCoverageEnabled = "YES"/g'
      - run:
          name: Bootstrap
          command: carthage bootstrap --platform mac
      - run: 
          name: Setup Keychain
          command: |
            security create-keychain -p circle cikeychain
            security list-keychains -d user -s "/Users/distiller/Library/Keychains/xcode.keychain-db" /Users/distiller/Library/Keychains/cikeychain-db
            security default-keychain -s /Users/distiller/Library/Keychains/cikeychain-db
            security unlock-keychain -p circle "/Users/distiller/Library/Keychains/cikeychain-db"
      - run:
          name: Run test suite
          command: xcodebuild test -scheme Auth0.macOS -destination 'platform=macOS,arch=x86_64' | xcpretty
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
  build-macOS-Swift-4.2:
    macos:
      xcode: "10.2.0"
    environment:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          HOMEBREW_LOGS: ~/homebrew-logs
          HOMEBREW_TEMP: ~/homebrew-temp
          HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - run: |
          brew install swiftlint
          bundle install --without=development
          grep -lR "shouldUseLaunchSchemeArgsEnv" *.* --null | xargs -0 sed -i '' -e 's/shouldUseLaunchSchemeArgsEnv = "YES"/shouldUseLaunchSchemeArgsEnv = "YES" codeCoverageEnabled = "YES"/g'
          sed -i "" 's/SWIFT_VERSION = 5.0/SWIFT_VERSION = 4.2/g' "Auth0.xcodeproj/project.pbxproj"
      - run:
          name: Bootstrap
          command: carthage bootstrap --platform mac
      - run: 
          name: Setup Keychain
          command: |
            security create-keychain -p circle cikeychain
            security list-keychains -d user -s "/Users/distiller/Library/Keychains/xcode.keychain-db" /Users/distiller/Library/Keychains/cikeychain-db
            security default-keychain -s /Users/distiller/Library/Keychains/cikeychain-db
            security unlock-keychain -p circle "/Users/distiller/Library/Keychains/cikeychain-db"
      - run:
          name: Run test suite
          command: xcodebuild test -scheme Auth0.macOS -destination 'platform=macOS,arch=x86_64' | xcpretty
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
  build-tvOS-Swift-5.0:
    macos:
      xcode: "10.2.0"
    environment:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          HOMEBREW_LOGS: ~/homebrew-logs
          HOMEBREW_TEMP: ~/homebrew-temp
          HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - run: |
          brew install swiftlint
          bundle install --without=development
          grep -lR "shouldUseLaunchSchemeArgsEnv" *.* --null | xargs -0 sed -i '' -e 's/shouldUseLaunchSchemeArgsEnv = "YES"/shouldUseLaunchSchemeArgsEnv = "YES" codeCoverageEnabled = "YES"/g'
      - run:
          name: Bootstrap
          command: carthage bootstrap --platform tvOS
      - run:
          name: Run test suite
          command: xcodebuild test -scheme Auth0.tvOS -destination 'platform=tvOS Simulator,name=Apple TV' | xcpretty
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
  build-tvOS-Swift-4.2:
    macos:
      xcode: "10.2.0"
    environment:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          HOMEBREW_LOGS: ~/homebrew-logs
          HOMEBREW_TEMP: ~/homebrew-temp
          HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - run: |
          brew install swiftlint
          bundle install --without=development
          grep -lR "shouldUseLaunchSchemeArgsEnv" *.* --null | xargs -0 sed -i '' -e 's/shouldUseLaunchSchemeArgsEnv = "YES"/shouldUseLaunchSchemeArgsEnv = "YES" codeCoverageEnabled = "YES"/g'
          sed -i "" 's/SWIFT_VERSION = 5.0/SWIFT_VERSION = 4.2/g' "Auth0.xcodeproj/project.pbxproj"
      - run:
          name: Bootstrap
          command: carthage bootstrap --platform tvOS
      - run:
          name: Run test suite
          command: xcodebuild test -scheme Auth0.tvOS -destination 'platform=tvOS Simulator,name=Apple TV' | xcpretty
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build

workflows:
  version: 2
  build:
    jobs:
      -  build-iOS-Swift-5.0
      -  build-iOS-Swift-4.2
      -  build-iOS-Swift-4.0
      -  build-macOS-Swift-5.0
      -  build-macOS-Swift-4.2
      -  build-tvOS-Swift-5.0
      -  build-tvOS-Swift-4.2